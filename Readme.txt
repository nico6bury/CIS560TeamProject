In general, there are two different things that need to be run in order to open the application.


Database-
Our database is already set up and good, and as long as you're on K-State wifi, you can access the same one by not changing the connection string in the WebAPI project. However, if you wish to make your own database, this can be done without too much difficulty. We use an SQL Connection Stringbuilder object to build the connection string, and this can be easily changed for connecting to other databases. Documentation for the connection string builder, including a list of all the keywords it uses, can be found at the links below:
https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/connection-string-builders
https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlconnection.connectionstring?view=dotnet-plat-ext-6.0
In terms of the scripts for building the database structure, they are found in the form of several files in the provided with the project code. These scripts are also found within the projects, but provided in other locations for easy access. All but two of the scripts are re-runnable. The file "DatabaseCreationScript.sql" will drop all procedures, tables, and even schemas in the database, effectively resetting the entire thing, before adding back the schemas and tables. It's found in the Tables folder. Additionally, to build all the procedures for the database, there are 38 sql files with a prefix of Create, Delete, Update, and Select, which are regular procedures for the database. You'll need to run each one of these once after setting up the database, and they can be found in the Procedures folder. In addition, there are four report query procedures, found in the files ItemCategorySummary.sql, ItemEnhancementSummary.sql, UserInventorySummary.sql, and UserItemSummary.sql. You'll need to run each of these once as well, and they're also in the Procedures folder.
There are also two sql files that need to be run once at database creation in a specific order. DatabaseCreateSpecialUsers.sql and DatabaseDefaultPopulation.sql both need to be run, but they are not re-runnable, so they should only be run once. DatabaseCreateSpecialUsers.sql needs to be run first, and then DatabaseDefaultPopulation.sql needs to be run right after. In particular, the tables in the database should not be modified before DatabaseCreateSpecialUsers.sql has been run, and DatabaseDefaultPopulation.sql will not work correctly (though it will probably still run) if rows are added to the database before DatabaseCreateSpecialUsers.sql is run. Both of these files are found in the Data folder.


WebAPI-
Firstly, run the WebAPI project in visual studio. The visual studio projects are located in the Backend folder. You'll want to use the GURPSGenBackend.sln solution file to open the solution and build all the projects within it.
Running the WebAPI will ensure the backend is running. The WebAPI has dependencies to the projects that actually interact with the database, all of which are hardcoded to use a specific connection string to connect to a database on KSU's servers under Nicholas Sixbury's database account. The method which builds the connection string for that is in a class called Statics, found in the GURPSData folder, in case you wish to change the connection to a local database or whatever else.


Frontend-
Then, in order to run the client side application, navigate to ./Frontend/gurpsfrontend/ in command prompt. Type the command "npm start", and the client window should open up in your default web browser. This window, however, won't show anything useful or do much unless you have the WebAPI project running at the same time. In order to run the the client side application, you will need npm, which is included in Node.js (https://nodejs.org/en/).
