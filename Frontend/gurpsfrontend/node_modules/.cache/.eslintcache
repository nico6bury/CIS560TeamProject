[{"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\index.js":"1","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\App.js":"2","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\reportWebVitals.js":"3","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\Header.js":"4","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\Sidebar.js":"5","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\OriginalGeneratorPage.js":"6","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\SpicyGeneratorPage.js":"7","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\TableInfoPage.js":"8","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\GenerateBox.js":"9","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\LoginPage.js":"10","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\SignUpPage.js":"11","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\EditTablesPage.js":"12","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\Filters.js":"13","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\ExtrasCheckboxes.js":"14","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\FilterCheckboxes.js":"15","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\UserTable.js":"16","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\CreateTable.js":"17","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\DisplayAndEditTables.js":"18","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\AddItems.js":"19"},{"size":593,"mtime":1636747601058,"results":"20","hashOfConfig":"21"},{"size":4122,"mtime":1637992050755,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2395,"mtime":1636752328552,"results":"24","hashOfConfig":"21"},{"size":3924,"mtime":1637186215255,"results":"25","hashOfConfig":"21"},{"size":3019,"mtime":1637983205464,"results":"26","hashOfConfig":"21"},{"size":3564,"mtime":1637983345122,"results":"27","hashOfConfig":"21"},{"size":2351,"mtime":1637985673795,"results":"28","hashOfConfig":"21"},{"size":6401,"mtime":1637992689656,"results":"29","hashOfConfig":"21"},{"size":4007,"mtime":1637185888602,"results":"30","hashOfConfig":"21"},{"size":3607,"mtime":1636753237077,"results":"31","hashOfConfig":"21"},{"size":1292,"mtime":1638001661914,"results":"32","hashOfConfig":"21"},{"size":1254,"mtime":1637980789521,"results":"33","hashOfConfig":"21"},{"size":1473,"mtime":1637978716921,"results":"34","hashOfConfig":"21"},{"size":1419,"mtime":1637978880799,"results":"35","hashOfConfig":"21"},{"size":3339,"mtime":1637985584893,"results":"36","hashOfConfig":"21"},{"size":3143,"mtime":1637993961323,"results":"37","hashOfConfig":"21"},{"size":996,"mtime":1638025208055,"results":"38","hashOfConfig":"21"},{"size":7673,"mtime":1638025143344,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"168e5ej",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\index.js",[],["90","91"],"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\App.js",["92","93","94"],"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\Header.js",["95"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport mainLogo from \"../images/mainLogo.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Header({ userName, isLoggedIn, setIsLoggedIn }) {\r\n  document.body.style.margin = 0;\r\n  const history = useHistory();\r\n\r\n  const HandleLogoutClick = (e) => {\r\n    setIsLoggedIn(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div className=\"headerMain\">\r\n        <img src={mainLogo} className=\"logo\" alt=\"GURPS Book image\"></img>\r\n        <div className=\"headerTitle\">GURPS Loot Random Generator</div>\r\n        <div className=\"headerSub\">\r\n          {isLoggedIn && (\r\n            <div>\r\n              <div>Welcome {userName}</div>\r\n              <Link className=\"mainLink\" to=\"/\">\r\n                <span onClick={HandleLogoutClick}>Logout</span>\r\n              </Link>\r\n            </div>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <div className=\"links\">\r\n              <Link className=\"mainLink\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n              <Link className=\"mainLink\" to=\"/signup\">\r\n                Create Account\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  padding: 1rem 1.5rem;\r\n  background: var(--darkPurpleColor);\r\n  border-bottom: 5px solid var(--primaryOrangeColor);\r\n  z-index: 999;\r\n  width: 100%;\r\n  margin: 0;\r\n  .headerMain {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    flex-direction: row;\r\n    //max-width: 1500px;\r\n    margin: 5 auto;\r\n    width: 100%;\r\n  }\r\n  .headerTitle {\r\n    font-size: 2.5rem;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.12rem;\r\n  }\r\n  .headerSub {\r\n    display: flex;\r\n    align-items: left;\r\n    flex-direction: column;\r\n    font-size: 1rem;\r\n    color: white;\r\n  }\r\n  .logo {\r\n    height: 50%;\r\n    width: 10%;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .headerMain {\r\n      float: none;\r\n      display: block;\r\n      text-align: left;\r\n    }\r\n    .header-right {\r\n      float: none;\r\n    }\r\n  }\r\n\r\n  .links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 3px;\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\Sidebar.js",["96","97","98","99","100"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nexport default function Sidebar({ isLoggedIn }) {\r\n  // return (\r\n  //   <PageWrapper>\r\n  //     <div>\r\n  //       <Link to=\"/\">Original Generator Page</Link>\r\n  //       {isLoggedIn && (\r\n  //         <div>\r\n  //           <Link to=\"/spicygenerator\">Spicy Generator Page</Link>\r\n  //           <Link>Table Info</Link>\r\n  //           <Link>Edit/Add Tables</Link>\r\n  //         </div>\r\n  //       )}\r\n  //     </div>\r\n  //   </PageWrapper>\r\n  // );\r\n\r\n  const location = useLocation();\r\n  //var to get the current page the user is on for highlighting that page\r\n  //on the navbar\r\n  let pageName = location.pathname.replaceAll(\"/\", \"\");\r\n  const [homeLit, setHomeLit] = useState(false);\r\n  const [registerLit, setRegisterLit] = useState(false);\r\n  //the current page the user is on. If they're on the homepage, replace\r\n  //the empty string with \"home\", otherwise use 'pageName'\r\n  const [currentPage, setCurrentPage] = useState(\r\n    pageName === \"\" ? \"home\" : pageName\r\n  );\r\n\r\n  return (\r\n    <SideWrapper>\r\n      <ul>\r\n        <li key={1}>\r\n          <Link\r\n            to=\"/\"\r\n            className={\r\n              \"sidebar-link \" + (currentPage === \"home\" ? \"lit\" : \"unlit\")\r\n            }\r\n            id=\"homeLink\"\r\n            onClick={() => setCurrentPage(\"home\")}\r\n          >\r\n            Original Generator\r\n          </Link>\r\n\r\n          {isLoggedIn && (\r\n            <div>\r\n              <Link\r\n                to=\"/spicygenerator\"\r\n                className={\r\n                  \"sidebar-link \" +\r\n                  (currentPage.includes(\"spicy\") ? \"lit\" : \"unlit\")\r\n                }\r\n                id=\"spicyGeneratorLink\"\r\n                onClick={() => setCurrentPage(\"spicygenerator\")}\r\n              >\r\n                Spicy Generator\r\n              </Link>\r\n              <Link\r\n                to=\"/tableinfo\"\r\n                className={\r\n                  \"sidebar-link \" +\r\n                  (currentPage === \"tableinfo\" ? \"lit\" : \"unlit\")\r\n                }\r\n                id=\"tableInfoLink\"\r\n                onClick={() => setCurrentPage(\"tableinfo\")}\r\n              >\r\n                Table Info\r\n              </Link>\r\n              <Link\r\n                to=\"/edittables\"\r\n                className={\r\n                  \"sidebar-link \" +\r\n                  (currentPage === \"edittables\" ? \"lit\" : \"unlit\")\r\n                }\r\n                id=\"editTablesLink\"\r\n                onClick={() => setCurrentPage(\"edittables\")}\r\n              >\r\n                Edit/Add Tables\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </SideWrapper>\r\n  );\r\n}\r\n\r\nconst SideWrapper = styled.nav`\r\n  //position:fixed;\r\n  //top:200px;\r\n  //left:50px;\r\n  //width: 60px;\r\n  height: 180px;\r\n  background: var(--mainGrey);\r\n  //z-index:1;\r\n  //border-right:4px solid var(--primaryColor);\r\n  //border-bottom:4px solid var(--primaryColor);\r\n  //border-left:4px solid var(--primaryColor);\r\n  //border-top:4px solid var(--primaryColor);\r\n  transition: var(--mainTransition);\r\n  font-size: 20px !important;\r\n\r\n  margin: 10px;\r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0 !important;\r\n  }\r\n  .sidebar-link {\r\n    display: block;\r\n    //font-size: 1.5rem;\r\n    text-transform: capitalize;\r\n    padding: 0.5rem 1rem;\r\n    font-size: 20px;\r\n    transition: var(--mainTransition);\r\n    text-decoration: none;\r\n    width: 80%;\r\n  }\r\n  .sidebar-link:hover {\r\n    background: #9b9b9b;\r\n    color: var(--mainWhite);\r\n    padding: 0.5rem 1.5rem 0.5rem 2.5rem;\r\n    text-decoration: none;\r\n  }\r\n  .lit {\r\n    color: var(--mainWhite);\r\n    background: var(--primaryOrangeColor);\r\n  }\r\n  .unlit {\r\n    color: var(--mainBlack);\r\n    background: var(--lightGrey);\r\n  }\r\n  @media (min-width: 576px) {\r\n    width: 20rem;\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\OriginalGeneratorPage.js",["101","102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenerateBox from \"./GenerateBox\";\r\nimport Filters from \"./Filters\";\r\n\r\nlet fakeICD = [\r\n  {\r\n    name: \"Fibers and Fabrics\",\r\n    itemCategoryId: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Spices\",\r\n    itemCategoryId: 2,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Jewelry\",\r\n    itemCategoryId: 3,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nlet declaredExtrasData = [\r\n  {\r\n    name: \"Embelishments\",\r\n    id: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Enchantments\",\r\n    id: 2,\r\n    checkd: true,\r\n  },\r\n];\r\n\r\nexport default function OriginalGeneratorPage() {\r\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\r\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //fetch the itemCategoryData\r\n    //doFetch();\r\n  });\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        typeRequest: \"getOriginalItemCategoryData\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          }\r\n\r\n          setIsLoaded(\"loaded\");\r\n          setItemCategoryData(mapDataToCheckboxes(result.data));\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const mapDataToCheckboxes = (data) => {\r\n    let finishedArray = [];\r\n    data.map((item) => {\r\n      let curItem = {\r\n        name: item.name,\r\n        id: item.id,\r\n        checked: true,\r\n      };\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>Original GURPS Generator</h1>\r\n      <div className=\"pageContent\">\r\n        <GenerateBox\r\n          typeBox=\"Original\"\r\n          originalData={itemCategoryData}\r\n          spicyData={\"\"}\r\n        />\r\n        <div className=\"spacer1\" />\r\n        <Filters\r\n          itemCategoryData={itemCategoryData}\r\n          setItemCategoryData={setItemCategoryData}\r\n          extrasData={extrasData}\r\n          setExtrasData={setExtrasData}\r\n          isSpicy={false}\r\n        ></Filters>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .pageContent {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .spacer1 {\r\n    margin-right: 100px;\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\SpicyGeneratorPage.js",["104","105","106","107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenerateBox from \"./GenerateBox\";\r\nimport Filters from \"./Filters\";\r\n\r\nlet fakeICD = [\r\n  {\r\n    name: \"Fibers and Fabrics\",\r\n    itemCategoryId: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Spices\",\r\n    itemCategoryId: 2,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Jewelry\",\r\n    itemCategoryId: 3,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nlet declaredExtrasData = [\r\n  {\r\n    name: \"Embelishments\",\r\n    id: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Enchantments\",\r\n    id: 2,\r\n    checkd: true,\r\n  },\r\n];\r\n\r\nlet fakeUserDefinedTables = [\r\n  {\r\n    name: \"Swords\",\r\n    id: 60,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"animals\",\r\n    id: 61,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nexport default function SpicyGeneratorPage() {\r\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\r\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\r\n  const [tablesToInclude, setTablesToInclude] = useState();\r\n  const [itemCategoryUDData, setItemCategoryUDData] = useState(\r\n    fakeUserDefinedTables\r\n  );\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //fetch the itemCategory data and spicyCategory data\r\n    //doFetch();\r\n  });\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        typeRequest: \"getAllItemCategoryData\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          }\r\n\r\n          setIsLoaded(\"loaded\");\r\n          setItemCategoryData(mapDataToCheckboxes(result.originalData));\r\n          setItemCategoryUDData(mapDataToCheckboxes(result.spicyData));\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const mapDataToCheckboxes = (data) => {\r\n    let finishedArray = [];\r\n    data.map((item) => {\r\n      let curItem = {\r\n        name: item.name,\r\n        id: item.id,\r\n        checked: true,\r\n      };\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>GURPS Generator With User-Defined Tables</h1>\r\n      <div className=\"pageContent\">\r\n        <GenerateBox\r\n          typeBox=\"Spicy\"\r\n          originalData={itemCategoryData}\r\n          spicyData={itemCategoryUDData}\r\n        />\r\n        <div className=\"spacer1\" />\r\n        <Filters\r\n          itemCategoryData={itemCategoryData}\r\n          setItemCategoryData={setItemCategoryData}\r\n          extrasData={extrasData}\r\n          setExtrasData={setExtrasData}\r\n          isSpicy={true}\r\n          userTables={itemCategoryUDData}\r\n          setUserTables={setItemCategoryUDData}\r\n        ></Filters>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .pageContent {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .spacer1 {\r\n    margin-right: 100px;\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\TableInfoPage.js",["109","110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserTable from \"./UserTable\";\r\n\r\nlet fakeUserData = [\r\n  {\r\n    table: \"swords\",\r\n    creatingUser: \"User1\",\r\n    data: [\r\n      {\r\n        name: \"wooden sword\",\r\n        id: 1,\r\n        basePrice: \"34.5\",\r\n      },\r\n      {\r\n        name: \"metal sword\",\r\n        id: 2,\r\n        basePrice: \"100.4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    table: \"animals\",\r\n    creatingUser: \"User2\",\r\n    data: [\r\n      {\r\n        name: \"flamingo\",\r\n        id: 1,\r\n        basePrice: \"5.00\",\r\n      },\r\n      {\r\n        name: \"tiger\",\r\n        id: 2,\r\n        basePrice: \"6.89\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function TableInfoPage() {\r\n  const [userTables, setUserTables] = useState(fakeUserData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //doFetch();\r\n  });\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/req/generate\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        typeRequest: \"getUserDefinedTables\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          } else {\r\n            setIsLoaded(\"loaded\");\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const Tables = () => {\r\n    let toReturn = userTables.map((item) => {\r\n      return (\r\n        <div>\r\n          <h3>\r\n            {item.table} - {item.creatingUser}\r\n          </h3>\r\n          <UserTable data={item.data} />\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{toReturn}</div>;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>User-Defined Tables</h1>\r\n      <Tables />\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav``;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\GenerateBox.js",["112","113","114","115","116","117","118","119","120"],"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\LoginPage.js",["121"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LoginPage({ setIsLoggedIn }) {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //If the user hasn't entered anything in the boxes, just return\r\n    if (username.length < 1 || password.length < 1) {\r\n      setIsLoaded(\"incorrect\");\r\n      return;\r\n    }\r\n    //The following will attempt to log the user in\r\n    //doFetch();\r\n\r\n    //The following is for testing purposes and is to simulate a call to the backend to log the user in\r\n    //setIsLoaded(\"incorrect\");\r\n    history.push(`/`);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/req/login\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n        //Send username and password\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If error\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            //return;\r\n          }\r\n          //If the user is not logged in\r\n          else if (result.response.data.loggedIn === 0) {\r\n            setIsLoggedIn(false);\r\n            setIsLoaded(\"incorrect\");\r\n            //return;\r\n          }\r\n          //The user is logged in\r\n          else if (result.response.data.loggedIn === 1) {\r\n            setIsLoggedIn(true);\r\n            //return;\r\n          }\r\n          //We somehow made it down here, just print the invalid message\r\n          else {\r\n            setIsLoaded(\"incorrect\");\r\n            setIsLoggedIn(false);\r\n          }\r\n          //The user is logged in\r\n          //setIsLoggedIn(true);\r\n          //console.log(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <form className=\"formWrapper\">\r\n        <div className=\"loginLabel\">GURPS Random Generator Login</div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Username</p> */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Password</p> */}\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"mainBtn\" onClick={handleSubmit}>\r\n            Sign in\r\n          </button>\r\n        </div>\r\n        {isLoaded === \"error\" && (\r\n          <div className=\"errorMessage\">Error logging in.</div>\r\n        )}\r\n        {isLoaded === \"incorrect\" && (\r\n          <div className=\"errorMessage\">\r\n            Incorrect username or password. Please try again.\r\n          </div>\r\n        )}\r\n      </form>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  /* .formWrapper {\r\n    display: flex !important;\r\n    justify-content: center !important;\r\n    height: 100% !important;\r\n    width: 100% !important;\r\n    flex-direction: column;\r\n    flex: 2;\r\n    align-items: stretch;\r\n    flex-grow: 1;\r\n  } */\r\n  .inputDiv {\r\n    margin-bottom: 5px;\r\n  }\r\n  .loginLabel {\r\n    font-size: 1.8rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: var(--mainBlack);\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\SignUpPage.js",["122"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignUpPage({ setIsLoggedIn }) {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //If the user hasn't entered anything in the boxes, just return\r\n    if (username.length < 1 || password.length < 8) {\r\n      setIsLoaded(\"incorrect\");\r\n      return;\r\n    }\r\n    //The following will attempt to log the user in\r\n    //doFetch();\r\n\r\n    //The following is for testing purposes and is to simulate a call to the backend to log the user in\r\n    //setIsLoaded(\"incorrect\");\r\n    history.push(\"/\");\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/req/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n        //Send username and password\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If error\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            //return;\r\n          }\r\n          //The sign up succeeded! Yay!\r\n          else {\r\n            setIsLoggedIn(true);\r\n            setIsLoaded(\"loaded\");\r\n          }\r\n          //The user is logged in\r\n          //setIsLoggedIn(true);\r\n          //console.log(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <form className=\"formWrapper\">\r\n        <div className=\"loginLabel\">GURPS Random Generator Sign Up</div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Username</p> */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Password</p> */}\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"mainBtn\" onClick={handleSubmit}>\r\n            Sign up!\r\n          </button>\r\n        </div>\r\n        {isLoaded === \"error\" && (\r\n          <div className=\"errorMessage\">Error signing up.</div>\r\n        )}\r\n        {isLoaded === \"incorrect\" && (\r\n          <div className=\"errorMessage\">\r\n            Please make sure your password is at least 8 characters.\r\n          </div>\r\n        )}\r\n      </form>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  /* .formWrapper {\r\n    display: flex !important;\r\n    justify-content: center !important;\r\n    height: 100% !important;\r\n    width: 100% !important;\r\n    flex-direction: column;\r\n    flex: 2;\r\n    align-items: stretch;\r\n    flex-grow: 1;\r\n  } */\r\n  .inputDiv {\r\n    margin-bottom: 5px;\r\n  }\r\n  .loginLabel {\r\n    font-size: 1.8rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: var(--mainBlack);\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\EditTablesPage.js",["123","124"],"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\Filters.js",["125"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ExtrasCheckboxes from \"./FilterSections/ExtrasCheckboxes\";\r\nimport FilterCheckboxes from \"./FilterSections/FilterCheckboxes\";\r\n\r\nexport default function Filter({\r\n  itemCategoryData,\r\n  setItemCategoryData,\r\n  extrasData,\r\n  setExtrasData,\r\n  isSpicy,\r\n  userTables,\r\n  setUserTables,\r\n}) {\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <div className=\"filtersHeader\">Filters</div>\r\n        <div className=\"sectionHeader\">General Filters</div>\r\n        <FilterCheckboxes data={extrasData} setData={setExtrasData} />\r\n        <div className=\"sectionHeader\">Item Category Filters</div>\r\n        <FilterCheckboxes\r\n          data={itemCategoryData}\r\n          setData={setItemCategoryData}\r\n        />\r\n        {isSpicy && (\r\n          <div>\r\n            <div className=\"sectionHeader\">User-Defined Categories</div>\r\n            <FilterCheckboxes data={userTables} setData={setUserTables} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 3px solid black;\r\n  .filtersHeader {\r\n    font-size: 2rem;\r\n  }\r\n  .sectionHeader {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\ExtrasCheckboxes.js",["126"],"import React from \"react\";\r\n\r\nexport default function ExtrasCheckboxes({ extrasData, setExtrasData }) {\r\n  //const [checkedData, setCheckedData] = useState(areaDescriptionData);\r\n\r\n  const handleToggle = (e, index) => {\r\n    let item = extrasData[index];\r\n    //item.endusetypecode = 99;\r\n    //console.log(item);\r\n    //item.active = e.target.value;\r\n    item.checked = !item.checked;\r\n    e.target.checked = item.checked;\r\n    e.target.value = item.checked;\r\n\r\n    let newState = extrasData\r\n      .slice(0, index)\r\n      .concat(item)\r\n      .concat(extrasData.slice(index + 1));\r\n\r\n    setExtrasData(newState);\r\n    //handleCheckChange(newState);\r\n\r\n    //console.log(checkedData);\r\n  };\r\n  // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n  let checkboxes = extrasData.map((item, idx) => {\r\n    let chkstr = \"\";\r\n    //console.log(\"ITEM: \" + item);\r\n    return (\r\n      <div className=\"checkboxes\">\r\n        <label className=\"checkboxes\">\r\n          <input\r\n            type=\"checkbox\"\r\n            //onClick={(e) => handleToggle(e, idx)}\r\n            //onChange={handleChange}\r\n            key={item.itemCategoryId}\r\n            name={item.name}\r\n            value={item.name}\r\n            checked={item.checked}\r\n            onChange={(e) => handleToggle(e, idx)}\r\n            className=\"checkboxes\"\r\n            readOnly={true}\r\n          />\r\n          {item.name}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n  return <div>{checkboxes}</div>;\r\n}\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\FilterCheckboxes.js",["127"],"import React from \"react\";\r\n\r\nexport default function FilterCheckboxes({ data, setData }) {\r\n  //const [checkedData, setCheckedData] = useState(areaDescriptionData);\r\n\r\n  const handleToggle = (e, index) => {\r\n    let item = data[index];\r\n    //item.endusetypecode = 99;\r\n    //console.log(item);\r\n    //item.active = e.target.value;\r\n    item.checked = !item.checked;\r\n    e.target.checked = item.checked;\r\n    e.target.value = item.checked;\r\n\r\n    let newState = data\r\n      .slice(0, index)\r\n      .concat(item)\r\n      .concat(data.slice(index + 1));\r\n\r\n    setData(newState);\r\n    //handleCheckChange(newState);\r\n\r\n    //console.log(checkedData);\r\n  };\r\n  // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n  let checkboxes = data.map((item, idx) => {\r\n    let chkstr = \"\";\r\n    //console.log(\"ITEM: \" + item);\r\n    return (\r\n      <div className=\"checkboxes\">\r\n        <label className=\"checkboxes\">\r\n          <input\r\n            type=\"checkbox\"\r\n            //onClick={(e) => handleToggle(e, idx)}\r\n            //onChange={handleChange}\r\n            key={item.id}\r\n            name={item.name}\r\n            value={item.name}\r\n            checked={item.checked}\r\n            onChange={(e) => handleToggle(e, idx)}\r\n            className=\"checkboxes\"\r\n            readOnly={true}\r\n          />\r\n          {item.name}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n  return <div>{checkboxes}</div>;\r\n}\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\UserTable.js",["128","129"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\n\r\nexport default function UserTable({ data }) {\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Item\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Base Price\",\r\n        accessor: \"basePrice\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data: data,\r\n      },\r\n      useSortBy\r\n    );\r\n\r\n  const handleRowClick = (e) => {\r\n    //do something\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <form className=\"generate-form\">\r\n          <table {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th\r\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                      {column.render(\"Header\")}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? \"▼\"\r\n                            : \"▲\"\r\n                          : \" ▲▼\"}\r\n                      </span>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr\r\n                    {...row.getRowProps()}\r\n                    key={i}\r\n                    onClick={() => handleRowClick(row)}\r\n                  >\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n\r\n          {isLoaded === \"error\" && (\r\n            <div className=\"errorMessage wrapText\">Something went wrong.</div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  .wrapText {\r\n    max-width: 350px;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  .generateWrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 15px;\r\n  }\r\n  .generate-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 3px;\r\n  }\r\n  .textBox {\r\n    margin-bottom: 5px;\r\n  }\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    tr:hover {\r\n      th {\r\n        background: var(--mainWhite);\r\n      }\r\n      background: var(--lightGrey);\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.15rem 0.15rem 0.15rem 0.35rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\CreateTable.js",["130"],"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\DisplayAndEditTables.js",["131","132","133"],"C:\\Users\\sarah.diener\\Desktop\\School\\CIS560\\GroupProject\\CIS560TeamProject\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\AddItems.js",["134","135","136","137","138","139","140","141","142"],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":19,"column":10,"nodeType":"149","messageId":"150","endLine":19,"endColumn":18},{"ruleId":"147","severity":1,"message":"151","line":30,"column":9,"nodeType":"149","messageId":"150","endLine":30,"endColumn":22},{"ruleId":"147","severity":1,"message":"152","line":122,"column":7,"nodeType":"149","messageId":"150","endLine":122,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":19,"column":9,"nodeType":"155","endLine":19,"endColumn":69},{"ruleId":"147","severity":1,"message":"156","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"157","line":25,"column":10,"nodeType":"149","messageId":"150","endLine":25,"endColumn":17},{"ruleId":"147","severity":1,"message":"158","line":25,"column":19,"nodeType":"149","messageId":"150","endLine":25,"endColumn":29},{"ruleId":"147","severity":1,"message":"159","line":26,"column":10,"nodeType":"149","messageId":"150","endLine":26,"endColumn":21},{"ruleId":"147","severity":1,"message":"160","line":26,"column":23,"nodeType":"149","messageId":"150","endLine":26,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":40,"column":10,"nodeType":"149","messageId":"150","endLine":40,"endColumn":18},{"ruleId":"147","severity":1,"message":"161","line":47,"column":9,"nodeType":"149","messageId":"150","endLine":47,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":84,"column":21,"nodeType":"164","messageId":"165","endLine":84,"endColumn":23},{"ruleId":"147","severity":1,"message":"166","line":53,"column":10,"nodeType":"149","messageId":"150","endLine":53,"endColumn":25},{"ruleId":"147","severity":1,"message":"167","line":53,"column":27,"nodeType":"149","messageId":"150","endLine":53,"endColumn":45},{"ruleId":"147","severity":1,"message":"148","line":57,"column":10,"nodeType":"149","messageId":"150","endLine":57,"endColumn":18},{"ruleId":"147","severity":1,"message":"161","line":64,"column":9,"nodeType":"149","messageId":"150","endLine":64,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":102,"column":21,"nodeType":"164","messageId":"165","endLine":102,"endColumn":23},{"ruleId":"147","severity":1,"message":"168","line":41,"column":22,"nodeType":"149","messageId":"150","endLine":41,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":42,"column":10,"nodeType":"149","messageId":"150","endLine":42,"endColumn":18},{"ruleId":"147","severity":1,"message":"161","line":48,"column":9,"nodeType":"149","messageId":"150","endLine":48,"endColumn":16},{"ruleId":"147","severity":1,"message":"156","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"169","line":23,"column":10,"nodeType":"149","messageId":"150","endLine":23,"endColumn":23},{"ruleId":"147","severity":1,"message":"170","line":23,"column":25,"nodeType":"149","messageId":"150","endLine":23,"endColumn":41},{"ruleId":"147","severity":1,"message":"171","line":24,"column":10,"nodeType":"149","messageId":"150","endLine":24,"endColumn":17},{"ruleId":"147","severity":1,"message":"172","line":24,"column":19,"nodeType":"149","messageId":"150","endLine":24,"endColumn":29},{"ruleId":"147","severity":1,"message":"173","line":26,"column":10,"nodeType":"149","messageId":"150","endLine":26,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":42,"column":29,"nodeType":"164","messageId":"165","endLine":42,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":47,"column":26,"nodeType":"164","messageId":"165","endLine":47,"endColumn":28},{"ruleId":"147","severity":1,"message":"161","line":58,"column":9,"nodeType":"149","messageId":"150","endLine":58,"endColumn":16},{"ruleId":"147","severity":1,"message":"161","line":27,"column":9,"nodeType":"149","messageId":"150","endLine":27,"endColumn":16},{"ruleId":"147","severity":1,"message":"161","line":27,"column":9,"nodeType":"149","messageId":"150","endLine":27,"endColumn":16},{"ruleId":"147","severity":1,"message":"156","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"174","line":45,"column":21,"nodeType":"149","messageId":"150","endLine":45,"endColumn":33},{"ruleId":"147","severity":1,"message":"175","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":24},{"ruleId":"147","severity":1,"message":"176","line":28,"column":9,"nodeType":"149","messageId":"150","endLine":28,"endColumn":15},{"ruleId":"147","severity":1,"message":"176","line":28,"column":9,"nodeType":"149","messageId":"150","endLine":28,"endColumn":15},{"ruleId":"147","severity":1,"message":"156","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"177","line":6,"column":20,"nodeType":"149","messageId":"150","endLine":6,"endColumn":31},{"ruleId":"147","severity":1,"message":"161","line":30,"column":9,"nodeType":"149","messageId":"150","endLine":30,"endColumn":16},{"ruleId":"147","severity":1,"message":"156","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"178","line":17,"column":10,"nodeType":"149","messageId":"150","endLine":17,"endColumn":21},{"ruleId":"147","severity":1,"message":"179","line":17,"column":23,"nodeType":"149","messageId":"150","endLine":17,"endColumn":37},{"ruleId":"147","severity":1,"message":"180","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":19},{"ruleId":"147","severity":1,"message":"181","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":28},{"ruleId":"147","severity":1,"message":"182","line":22,"column":10,"nodeType":"149","messageId":"150","endLine":22,"endColumn":20},{"ruleId":"147","severity":1,"message":"183","line":22,"column":22,"nodeType":"149","messageId":"150","endLine":22,"endColumn":35},{"ruleId":"184","severity":1,"message":"185","line":28,"column":6,"nodeType":"186","endLine":28,"endColumn":8,"suggestions":"187"},{"ruleId":"162","severity":1,"message":"163","line":32,"column":23,"nodeType":"164","messageId":"165","endLine":32,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":52,"column":35,"nodeType":"190","messageId":"191","endLine":52,"endColumn":37},{"ruleId":"147","severity":1,"message":"176","line":62,"column":11,"nodeType":"149","messageId":"150","endLine":62,"endColumn":17},{"ruleId":"147","severity":1,"message":"192","line":102,"column":9,"nodeType":"149","messageId":"150","endLine":102,"endColumn":19},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","'fetchUserData' is assigned a value but never used.","'LoginPageWrapper' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'homeLit' is assigned a value but never used.","'setHomeLit' is assigned a value but never used.","'registerLit' is assigned a value but never used.","'setRegisterLit' is assigned a value but never used.","'doFetch' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'tablesToInclude' is assigned a value but never used.","'setTablesToInclude' is assigned a value but never used.","'setUserTables' is assigned a value but never used.","'nextGenerated' is assigned a value but never used.","'setNextGenerated' is assigned a value but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'randResult' is assigned a value but never used.","'setTableData' is assigned a value but never used.","'ExtrasCheckboxes' is defined but never used.","'chkstr' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","'newItemData' is assigned a value but never used.","'setNewItemData' is assigned a value but never used.","'CreateTable' is defined but never used.","'DisplayAndEditTables' is defined but never used.","'tableValue' is assigned a value but never used.","'setTableValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tables'. Either include it or remove the dependency array. If 'setTableData' needs the current value of 'tables', you can also switch to useReducer instead of useState and read 'tables' in the reducer.","ArrayExpression",["195"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'doAddFetch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [tables]",{"range":"198","text":"199"},[896,898],"[tables]"]