[{"C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\index.js":"1","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\App.js":"3","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\Header.js":"4","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\SpicyGeneratorPage.js":"5","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\TableInfoPage.js":"6","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\EditTablesPage.js":"7","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\LoginPage.js":"8","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\statisticsPage\\StatisticsPage.js":"9","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\SignUpPage.js":"10","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\Sidebar.js":"11","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\OriginalGeneratorPage.js":"12","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\Filters.js":"13","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\UserTable.js":"14","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\CreateTable.js":"15","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\statisticsPage\\Stat.js":"16","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\DisplayAndEditTables.js":"17","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\GenerateBox.js":"18","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\AddItems.js":"19","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\ExtrasCheckboxes.js":"20","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\FilterCheckboxes.js":"21"},{"size":613,"mtime":1637691236465,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1633729883465,"results":"24","hashOfConfig":"23"},{"size":4695,"mtime":1638203624337,"results":"25","hashOfConfig":"23"},{"size":2401,"mtime":1638080367510,"results":"26","hashOfConfig":"23"},{"size":3564,"mtime":1637991201769,"results":"27","hashOfConfig":"23"},{"size":2408,"mtime":1638164513581,"results":"28","hashOfConfig":"23"},{"size":1918,"mtime":1638036595360,"results":"29","hashOfConfig":"23"},{"size":4325,"mtime":1638171432507,"results":"30","hashOfConfig":"23"},{"size":2483,"mtime":1638080367513,"results":"31","hashOfConfig":"23"},{"size":3831,"mtime":1638164513580,"results":"32","hashOfConfig":"23"},{"size":4315,"mtime":1638203624338,"results":"33","hashOfConfig":"23"},{"size":2906,"mtime":1638193542222,"results":"34","hashOfConfig":"23"},{"size":1254,"mtime":1637991201766,"results":"35","hashOfConfig":"23"},{"size":3856,"mtime":1638036595363,"results":"36","hashOfConfig":"23"},{"size":3323,"mtime":1638171432505,"results":"37","hashOfConfig":"23"},{"size":492,"mtime":1638080367512,"results":"38","hashOfConfig":"23"},{"size":1084,"mtime":1638036595359,"results":"39","hashOfConfig":"23"},{"size":6249,"mtime":1638203624340,"results":"40","hashOfConfig":"23"},{"size":8131,"mtime":1638193542220,"results":"41","hashOfConfig":"23"},{"size":1473,"mtime":1637991201764,"results":"42","hashOfConfig":"23"},{"size":1419,"mtime":1637991201765,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18il64m",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"46"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"46"},"C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\index.js",[],["105","106"],"C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\App.js",["107","108","109"],"import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport OriginalGeneratorPage from \"./components/generatorPages/OriginalGeneratorPage\";\r\nimport SpicyGeneratorPage from \"./components/generatorPages/SpicyGeneratorPage\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport TableInfoPage from \"./components/tableInfoPage/TableInfoPage\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport \"./App.css\";\r\nimport LoginPage from \"./components/loginSignUpPages/LoginPage\";\r\nimport SignUpPage from \"./components/loginSignUpPages/SignUpPage\";\r\nimport EditTablesPage from \"./components/editTablesPage/EditTablesPage\";\r\nimport StatisticsPage from \"./components/statisticsPage/StatisticsPage\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userId, setUserId] = useState(2);\r\n  const [isLoaded, setIsLoaded] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //fetchUserData();\r\n\r\n    //The following is to simulate a call to fetchUserData()\r\n    //setIsLoggedIn(true);\r\n    setIsLoaded(\"loaded\");\r\n    //setUserName(\"\");\r\n  }, [isLoggedIn]);\r\n\r\n  const fetchUserData = () => {\r\n    //Do userInfo fetch here and set returned values to state\r\n    fetch(\"http://localhost:5000/api/Overall\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({}),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          // if (result.response.apiStatusCode !== \"OK\") {\r\n          //   setIsLoaded(\"error\");\r\n          //   setIsLoggedIn(false);\r\n          //   return;\r\n          // }\r\n          // //If the user is not logged in\r\n          // if (result.response.data.loggedIn === 0) {\r\n          //   setIsLoggedIn(false);\r\n          //   //setIsLoaded(\"incorrect\");\r\n          //   return;\r\n          // }\r\n          // //The user is logged in\r\n          // if (result.response.data.loggedIn === 1) {\r\n          //   setIsLoggedIn(true);\r\n          //   setUserId(result.response.data.dealerid);\r\n          //   setUserName(result.response.data.dealerName);\r\n          //   setIsLoaded(\"loaded\");\r\n          // }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <Header\r\n          userName={userName}\r\n          isLoggedIn={isLoggedIn}\r\n          setIsLoggedIn={setIsLoggedIn}\r\n        />\r\n        <div className=\"contentWrapper\">\r\n          <Sidebar isLoggedIn={isLoggedIn} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => <OriginalGeneratorPage userId={userId} />}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              render={(props) => (\r\n                <LoginPage\r\n                  setIsLoggedIn={setIsLoggedIn}\r\n                  setUserId={setUserId}\r\n                  setFinalUserName={setUserName}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/signup\"\r\n              render={(props) => <SignUpPage setIsLoggedIn={setIsLoggedIn} />}\r\n            />\r\n            {isLoggedIn && (\r\n              <Fragment>\r\n                <Route path=\"/spicygenerator\" component={SpicyGeneratorPage} />\r\n                <Route path=\"/tableinfo\" component={TableInfoPage} />\r\n                <Route\r\n                  path=\"/edittables\"\r\n                  render={(props) => <EditTablesPage userId={userId} />}\r\n                />\r\n                <Route path=\"/statistics\" component={StatisticsPage} />\r\n              </Fragment>\r\n            )}\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  //display: flex;\r\n\r\n  .contentWrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: left;\r\n  }\r\n`;\r\n\r\nconst LoginPageWrapper = styled.nav`\r\n  display: flex !important;\r\n  align-items: center !important;\r\n  justify-content: center !important;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-grow: 1;\r\n  color: red;\r\n`;\r\n\r\nexport default App;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\Header.js",["110"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport mainLogo from \"../images/mainLogo.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Header({ userName, isLoggedIn, setIsLoggedIn }) {\r\n  document.body.style.margin = 0;\r\n  const history = useHistory();\r\n\r\n  const HandleLogoutClick = (e) => {\r\n    setIsLoggedIn(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div className=\"headerMain\">\r\n        <img src={mainLogo} className=\"logo\" alt=\"GURPS Book image\"></img>\r\n        <div className=\"headerTitle\">GURPS Loot Random Generator</div>\r\n        <div className=\"headerSub\">\r\n          {isLoggedIn && (\r\n            <div>\r\n              <div>Welcome {userName}</div>\r\n              <Link className=\"mainLink\" to=\"/\">\r\n                <span onClick={HandleLogoutClick}>Logout</span>\r\n              </Link>\r\n            </div>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <div className=\"links\">\r\n              <Link className=\"mainLink\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n              <Link className=\"mainLink\" to=\"/signup\">\r\n                Create Account\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  padding: 1rem 1.5rem;\r\n  background: var(--darkPurpleColor);\r\n  border-bottom: 5px solid var(--primaryOrangeColor);\r\n  z-index: 999;\r\n  /* width: 100%; */\r\n  margin: 0;\r\n  .headerMain {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    flex-direction: row;\r\n    //max-width: 1500px;\r\n    margin: 5 auto;\r\n    width: 100%;\r\n  }\r\n  .headerTitle {\r\n    font-size: 2.5rem;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.12rem;\r\n  }\r\n  .headerSub {\r\n    display: flex;\r\n    align-items: left;\r\n    flex-direction: column;\r\n    font-size: 1rem;\r\n    color: white;\r\n  }\r\n  .logo {\r\n    height: 50%;\r\n    width: 10%;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .headerMain {\r\n      float: none;\r\n      display: block;\r\n      text-align: left;\r\n    }\r\n    .header-right {\r\n      float: none;\r\n    }\r\n  }\r\n\r\n  .links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 3px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\SpicyGeneratorPage.js",["111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenerateBox from \"./GenerateBox\";\r\nimport Filters from \"./Filters\";\r\n\r\nlet fakeICD = [\r\n  {\r\n    name: \"Fibers and Fabrics\",\r\n    itemCategoryId: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Spices\",\r\n    itemCategoryId: 2,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Jewelry\",\r\n    itemCategoryId: 3,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nlet declaredExtrasData = [\r\n  {\r\n    name: \"Embelishments\",\r\n    id: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Enchantments\",\r\n    id: 2,\r\n    checkd: true,\r\n  },\r\n];\r\n\r\nlet fakeUserDefinedTables = [\r\n  {\r\n    name: \"Swords\",\r\n    id: 60,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"animals\",\r\n    id: 61,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nexport default function SpicyGeneratorPage() {\r\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\r\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\r\n  const [tablesToInclude, setTablesToInclude] = useState();\r\n  const [itemCategoryUDData, setItemCategoryUDData] = useState(\r\n    fakeUserDefinedTables\r\n  );\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //fetch the itemCategory data and spicyCategory data\r\n    //doFetch();\r\n  });\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        typeRequest: \"getAllItemCategoryData\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          }\r\n\r\n          setIsLoaded(\"loaded\");\r\n          setItemCategoryData(mapDataToCheckboxes(result.originalData));\r\n          setItemCategoryUDData(mapDataToCheckboxes(result.spicyData));\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const mapDataToCheckboxes = (data) => {\r\n    let finishedArray = [];\r\n    data.map((item) => {\r\n      let curItem = {\r\n        name: item.name,\r\n        id: item.id,\r\n        checked: true,\r\n      };\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>GURPS Generator With User-Defined Tables</h1>\r\n      <div className=\"pageContent\">\r\n        <GenerateBox\r\n          typeBox=\"Spicy\"\r\n          originalData={itemCategoryData}\r\n          spicyData={itemCategoryUDData}\r\n        />\r\n        <div className=\"spacer1\" />\r\n        <Filters\r\n          itemCategoryData={itemCategoryData}\r\n          setItemCategoryData={setItemCategoryData}\r\n          extrasData={extrasData}\r\n          setExtrasData={setExtrasData}\r\n          isSpicy={true}\r\n          userTables={itemCategoryUDData}\r\n          setUserTables={setItemCategoryUDData}\r\n        ></Filters>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .pageContent {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .spacer1 {\r\n    margin-right: 100px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\TableInfoPage.js",["116","117"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserTable from \"./UserTable\";\r\n\r\nlet fakeUserData = [\r\n  {\r\n    table: \"swords\",\r\n    creatingUser: \"User1\",\r\n    data: [\r\n      {\r\n        name: \"wooden sword\",\r\n        id: 1,\r\n        basePrice: \"34.5\",\r\n      },\r\n      {\r\n        name: \"metal sword\",\r\n        id: 2,\r\n        basePrice: \"100.4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    table: \"animals\",\r\n    creatingUser: \"User2\",\r\n    data: [\r\n      {\r\n        name: \"flamingo\",\r\n        id: 1,\r\n        basePrice: \"5.00\",\r\n      },\r\n      {\r\n        name: \"tiger\",\r\n        id: 2,\r\n        basePrice: \"6.89\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function TableInfoPage() {\r\n  const [userTables, setUserTables] = useState(fakeUserData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //doFetch();\r\n  }, []);\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/api/RetrieveAllItems\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username: \"getUserDefinedTables\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          setUserTables(result);\r\n          setIsLoaded(\"loaded\");\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const Tables = () => {\r\n    let toReturn = userTables.map((item) => {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <b>\r\n              {item.table} - {item.creatingUser}\r\n            </b>\r\n          </div>\r\n          <div className=\"tableWrap\">\r\n            <UserTable data={item.data} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{toReturn}</div>;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>User-Defined Tables</h1>\r\n      <Tables />\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .tableWrap {\r\n    display: flex;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\EditTablesPage.js",["118","119"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddItems from \"./AddItems\";\r\nimport CreateTable from \"./CreateTable\";\r\nimport DisplayAndEditTables from \"./DisplayAndEditTables\";\r\n\r\nlet fakeUserData = [\r\n  {\r\n    table: \"swords\",\r\n    creatingUser: \"User1\",\r\n    id: 1,\r\n    data: [\r\n      {\r\n        name: \"wooden sword\",\r\n        id: 1,\r\n        basePrice: \"34.5\",\r\n        baseWeight: \"20\",\r\n        weightType: \"Pounds\",\r\n        quantityMin: \"1\",\r\n        quantityMax: \"5\",\r\n        description: \"A sword made of wood. Not sharp.\",\r\n        relativeChance: \"0.3\",\r\n      },\r\n      {\r\n        name: \"metal sword\",\r\n        id: 2,\r\n        basePrice: \"100.4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    table: \"animals\",\r\n    creatingUser: \"User2\",\r\n    id: 2,\r\n    data: [\r\n      {\r\n        name: \"flamingo\",\r\n        id: 1,\r\n        basePrice: \"5.00\",\r\n      },\r\n      {\r\n        name: \"tiger\",\r\n        id: 2,\r\n        basePrice: \"6.89\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function EditTablesPage({ userId }) {\r\n  const [tableData, setTableData] = useState(fakeUserData);\r\n  const [isLoadedSuccessOrErrorMessage, setIsLoadedSuccessOrErrorMessage] =\r\n    useState(\"\");\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h3>Edit/Add Tables</h3>\r\n      <DisplayAndEditTables tableData={tableData} />\r\n      <div className=\"separaterBottom\" />\r\n      <CreateTable\r\n        userId={userId}\r\n        isLoadedSuccessOrErrorMessage={isLoadedSuccessOrErrorMessage}\r\n        setIsLoadedSuccessOrErrorMessage={setIsLoadedSuccessOrErrorMessage}\r\n      />\r\n      <AddItems\r\n        tables={tableData}\r\n        isLoadedSuccessOrErrorMessage={isLoadedSuccessOrErrorMessage}\r\n        setIsLoadedSuccessOrErrorMessage={setIsLoadedSuccessOrErrorMessage}\r\n      />\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .separaterBottom {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\LoginPage.js",["120"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LoginPage({\r\n  setIsLoggedIn,\r\n  setUserId,\r\n  setFinalUserName,\r\n}) {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //If the user hasn't entered anything in the boxes, just return\r\n    if (username.length < 1 || password.length < 1) {\r\n      setIsLoaded(\"incorrect\");\r\n      return;\r\n    }\r\n    //The following will attempt to log the user in\r\n    doFetch();\r\n\r\n    //The following is for testing purposes and is to simulate a call to the backend to log the user in\r\n    //setIsLoaded(\"incorrect\");\r\n    history.push(`/`);\r\n    //setIsLoggedIn(true);\r\n  };\r\n\r\n  const doFetch = () => {\r\n    let jsonUn = JSON.stringify({ username: username });\r\n    fetch(`http://localhost:5000/api/RetrieveUserForUsername/${username}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          if (password === result[0].password) {\r\n            setIsLoggedIn(true);\r\n            setUserId(result[0].userID);\r\n            setFinalUserName(username);\r\n          } else {\r\n            setIsLoggedIn(false);\r\n            setIsLoaded(\"incorrect\");\r\n          }\r\n          //If error\r\n          // if (result.response.apiStatusCode !== \"OK\") {\r\n          //   setIsLoaded(\"error\");\r\n          //   //return;\r\n          // }\r\n          // //If the user is not logged in\r\n          // else if (result.response.data.loggedIn === 0) {\r\n          //   setIsLoggedIn(false);\r\n          //   setIsLoaded(\"incorrect\");\r\n          //   //return;\r\n          // }\r\n          // //The user is logged in\r\n          // else if (result.response.data.loggedIn === 1) {\r\n          //   setIsLoggedIn(true);\r\n          //   //return;\r\n          // }\r\n          // //We somehow made it down here, just print the invalid message\r\n          // else {\r\n          //   setIsLoaded(\"incorrect\");\r\n          //   setIsLoggedIn(false);\r\n          // }\r\n          //The user is logged in\r\n          //setIsLoggedIn(true);\r\n          //console.log(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <form className=\"formWrapper\">\r\n        <div className=\"loginLabel\">GURPS Random Generator Login</div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Username</p> */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Password</p> */}\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"mainBtn\" onClick={handleSubmit}>\r\n            Sign in\r\n          </button>\r\n        </div>\r\n        {isLoaded === \"error\" && (\r\n          <div className=\"errorMessage\">Error logging in.</div>\r\n        )}\r\n        {isLoaded === \"incorrect\" && (\r\n          <div className=\"errorMessage\">\r\n            Incorrect username or password. Please try again.\r\n          </div>\r\n        )}\r\n      </form>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  /* .formWrapper {\r\n    display: flex !important;\r\n    justify-content: center !important;\r\n    height: 100% !important;\r\n    width: 100% !important;\r\n    flex-direction: column;\r\n    flex: 2;\r\n    align-items: stretch;\r\n    flex-grow: 1;\r\n  } */\r\n  .inputDiv {\r\n    margin-bottom: 5px;\r\n  }\r\n  .loginLabel {\r\n    font-size: 1.8rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: var(--mainBlack);\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\statisticsPage\\StatisticsPage.js",["121","122"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Stat from \"./Stat\";\r\n\r\nexport default function StatisticsPage({ userId }) {\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n  const [numberOfTables, setNumberOfTables] = useState();\r\n  const [numberOfItems, setNumberOfItems] = useState();\r\n  const [joinedOn, setJoinedOn] = useState();\r\n  const [numberGenerated, setNumberGenerated] = useState();\r\n\r\n  useEffect(() => {\r\n    //doFetch();\r\n    setNumberOfItems(\"4\");\r\n    setNumberOfTables(\"2\");\r\n    setJoinedOn(\"2021-27-11\");\r\n    setNumberGenerated(\"50\");\r\n  }, []);\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        requestType: \"getUserStatistics\",\r\n        userId: userId,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          }\r\n          setJoinedOn(result.joinedOn);\r\n          setNumberOfTables(result.numberOfTables);\r\n          setNumberOfItems(result.numberOfItems);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div className=\"statsWrapper\">\r\n        <h3>Statistics</h3>\r\n        <Stat title=\"Joined On\" data={joinedOn} />\r\n        <div className=\"separaterBottom\" />\r\n        <Stat title=\"Number of Tables Created\" data={numberOfTables} />\r\n        <div className=\"separaterBottom\" />\r\n        <Stat title=\"Number of Items Created\" data={numberOfItems} />\r\n        <div className=\"separaterBottom\" />\r\n        <Stat title=\"Total Number of Items Generated\" data={numberGenerated} />\r\n        <div className=\"separaterBottom\" />\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .statsWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .separaterBottom {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\loginSignUpPages\\SignUpPage.js",[],"C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\Sidebar.js",["123","124","125","126","127"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nexport default function Sidebar({ isLoggedIn }) {\r\n  // return (\r\n  //   <PageWrapper>\r\n  //     <div>\r\n  //       <Link to=\"/\">Original Generator Page</Link>\r\n  //       {isLoggedIn && (\r\n  //         <div>\r\n  //           <Link to=\"/spicygenerator\">Spicy Generator Page</Link>\r\n  //           <Link>Table Info</Link>\r\n  //           <Link>Edit/Add Tables</Link>\r\n  //         </div>\r\n  //       )}\r\n  //     </div>\r\n  //   </PageWrapper>\r\n  // );\r\n\r\n  const location = useLocation();\r\n  //var to get the current page the user is on for highlighting that page\r\n  //on the navbar\r\n  let pageName = location.pathname.replaceAll(\"/\", \"\");\r\n  const [homeLit, setHomeLit] = useState(false);\r\n  const [registerLit, setRegisterLit] = useState(false);\r\n  //the current page the user is on. If they're on the homepage, replace\r\n  //the empty string with \"home\", otherwise use 'pageName'\r\n  const [currentPage, setCurrentPage] = useState(\r\n    pageName === \"\" ? \"home\" : pageName\r\n  );\r\n\r\n  return (\r\n    <SideWrapper>\r\n      <ul>\r\n        <li key={1}>\r\n          <Link\r\n            to=\"/\"\r\n            className={\r\n              \"sidebar-link \" + (currentPage === \"home\" ? \"lit\" : \"unlit\")\r\n            }\r\n            id=\"homeLink\"\r\n            onClick={() => setCurrentPage(\"home\")}\r\n          >\r\n            Original Generator\r\n          </Link>\r\n\r\n          {isLoggedIn && (\r\n            <div>\r\n              {/* <Link\r\n                to=\"/spicygenerator\"\r\n                className={\r\n                  \"sidebar-link \" +\r\n                  (currentPage.includes(\"spicy\") ? \"lit\" : \"unlit\")\r\n                }\r\n                id=\"spicyGeneratorLink\"\r\n                onClick={() => setCurrentPage(\"spicygenerator\")}\r\n              >\r\n                Spicy Generator\r\n              </Link> */}\r\n              {/* <Link\r\n                to=\"/tableinfo\"\r\n                className={\r\n                  \"sidebar-link \" +\r\n                  (currentPage === \"tableinfo\" ? \"lit\" : \"unlit\")\r\n                }\r\n                id=\"tableInfoLink\"\r\n                onClick={() => setCurrentPage(\"tableinfo\")}\r\n              >\r\n                Table Info\r\n              </Link> */}\r\n              <Link\r\n                to=\"/edittables\"\r\n                className={\r\n                  \"sidebar-link \" +\r\n                  (currentPage === \"edittables\" ? \"lit\" : \"unlit\")\r\n                }\r\n                id=\"editTablesLink\"\r\n                onClick={() => setCurrentPage(\"edittables\")}\r\n              >\r\n                Edit/Add Tables\r\n              </Link>\r\n              <Link\r\n                to=\"/statistics\"\r\n                className={\r\n                  \"sidebar-link \" +\r\n                  (currentPage === \"statistics\" ? \"lit\" : \"unlit\")\r\n                }\r\n                id=\"statisticsLink\"\r\n                onClick={() => setCurrentPage(\"statistics\")}\r\n              >\r\n                Statistics\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </SideWrapper>\r\n  );\r\n}\r\n\r\nconst SideWrapper = styled.nav`\r\n  //position:fixed;\r\n  //top:200px;\r\n  //left:50px;\r\n  //width: 60px;\r\n  height: 180px;\r\n  background: var(--mainGrey);\r\n  //z-index:1;\r\n  //border-right:4px solid var(--primaryColor);\r\n  //border-bottom:4px solid var(--primaryColor);\r\n  //border-left:4px solid var(--primaryColor);\r\n  //border-top:4px solid var(--primaryColor);\r\n  transition: var(--mainTransition);\r\n  font-size: 20px !important;\r\n\r\n  margin: 10px;\r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0 !important;\r\n  }\r\n  .sidebar-link {\r\n    display: block;\r\n    //font-size: 1.5rem;\r\n    text-transform: capitalize;\r\n    padding: 0.5rem 1rem;\r\n    font-size: 20px;\r\n    transition: var(--mainTransition);\r\n    text-decoration: none;\r\n    width: 80%;\r\n  }\r\n  .sidebar-link:hover {\r\n    background: #9b9b9b;\r\n    color: var(--mainWhite);\r\n    padding: 0.5rem 1.5rem 0.5rem 2.5rem;\r\n    text-decoration: none;\r\n  }\r\n  .lit {\r\n    color: var(--mainWhite);\r\n    background: var(--primaryOrangeColor);\r\n  }\r\n  .unlit {\r\n    color: var(--mainBlack);\r\n    background: var(--lightGrey);\r\n  }\r\n  @media (min-width: 576px) {\r\n    width: 20rem;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\OriginalGeneratorPage.js",["128","129","130","131","132","133"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenerateBox from \"./GenerateBox\";\r\nimport Filters from \"./Filters\";\r\n\r\nlet fakeICD = [\r\n  {\r\n    name: \"Fibers and Fabrics\",\r\n    itemCategoryId: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Spices\",\r\n    itemCategoryId: 2,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Jewelry\",\r\n    itemCategoryId: 3,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nlet declaredExtrasData = [\r\n  {\r\n    name: \"Embelishments\",\r\n    id: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Enchantments\",\r\n    id: 2,\r\n    checkd: true,\r\n  },\r\n];\r\n\r\nexport default function OriginalGeneratorPage({ userId }) {\r\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\r\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //fetch the itemCategoryData\r\n    //doFetch();\r\n  }, []);\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/api/RetrieveDefaultItemCategories\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({}),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n\r\n          setIsLoaded(\"loaded\");\r\n          setItemCategoryData(mapDataToCheckboxes(result));\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const mapDataToCheckboxes = (data) => {\r\n    let finishedArray = [];\r\n    data.map((item) => {\r\n      let curItem = {\r\n        name: item.name,\r\n        id: item.id,\r\n        checked: true,\r\n      };\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>Original GURPS Generator</h1>\r\n      <div className=\"pageContent\">\r\n        <GenerateBox\r\n          typeBox=\"Original\"\r\n          originalData={itemCategoryData}\r\n          spicyData={\"\"}\r\n          userId={userId}\r\n        />\r\n        <div className=\"spacer1\" />\r\n        {/* <Filters\r\n          itemCategoryData={itemCategoryData}\r\n          setItemCategoryData={setItemCategoryData}\r\n          extrasData={extrasData}\r\n          setExtrasData={setExtrasData}\r\n          isSpicy={false}\r\n        ></Filters> */}\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .pageContent {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .spacer1 {\r\n    margin-right: 100px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\Filters.js",["134"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ExtrasCheckboxes from \"./FilterSections/ExtrasCheckboxes\";\r\nimport FilterCheckboxes from \"./FilterSections/FilterCheckboxes\";\r\n\r\nexport default function Filter({\r\n  itemCategoryData,\r\n  setItemCategoryData,\r\n  extrasData,\r\n  setExtrasData,\r\n  isSpicy,\r\n  userTables,\r\n  setUserTables,\r\n}) {\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <div className=\"filtersHeader\">Filters</div>\r\n        <div className=\"sectionHeader\">General Filters</div>\r\n        <FilterCheckboxes data={extrasData} setData={setExtrasData} />\r\n        <div className=\"sectionHeader\">Item Category Filters</div>\r\n        <FilterCheckboxes\r\n          data={itemCategoryData}\r\n          setData={setItemCategoryData}\r\n        />\r\n        {isSpicy && (\r\n          <div>\r\n            <div className=\"sectionHeader\">User-Defined Categories</div>\r\n            <FilterCheckboxes data={userTables} setData={setUserTables} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 3px solid black;\r\n  .filtersHeader {\r\n    font-size: 2rem;\r\n  }\r\n  .sectionHeader {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\tableInfoPage\\UserTable.js",["135","136"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\n\r\nexport default function UserTable({ data }) {\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Item\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Base Price\",\r\n        accessor: \"basePrice\",\r\n      },\r\n      {\r\n        Header: \"Base Weight\",\r\n        accessor: \"baseWeight\",\r\n      },\r\n      {\r\n        Header: \"Weight Type\",\r\n        accessor: \"weightType\",\r\n      },\r\n      {\r\n        Header: \"Quantity Min\",\r\n        accessor: \"quantityMin\",\r\n      },\r\n      {\r\n        Header: \"Quantity Max\",\r\n        accessor: \"quantityMax\",\r\n      },\r\n      {\r\n        Header: \"Description\",\r\n        accessor: \"description\",\r\n      },\r\n      {\r\n        Header: \"Relative Chance\",\r\n        accessor: \"relativeChance\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data: data,\r\n      },\r\n      useSortBy\r\n    );\r\n\r\n  const handleRowClick = (e) => {\r\n    //do something\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <form className=\"generate-form\">\r\n          <table {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th\r\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                      {column.render(\"Header\")}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? \"▼\"\r\n                            : \"▲\"\r\n                          : \" ▲▼\"}\r\n                      </span>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr\r\n                    {...row.getRowProps()}\r\n                    key={i}\r\n                    onClick={() => handleRowClick(row)}\r\n                  >\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n\r\n          {isLoaded === \"error\" && (\r\n            <div className=\"errorMessage wrapText\">Something went wrong.</div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  .wrapText {\r\n    max-width: 350px;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  .generateWrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 15px;\r\n  }\r\n  .generate-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 3px;\r\n  }\r\n  .textBox {\r\n    margin-bottom: 5px;\r\n  }\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    tr:hover {\r\n      th {\r\n        background: var(--mainWhite);\r\n      }\r\n      background: var(--lightGrey);\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.15rem 0.15rem 0.15rem 0.35rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\CreateTable.js",["137"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nlet starterData = {\r\n  tableName: \"\",\r\n};\r\n\r\nexport default function EditTablesPage({\r\n  userId,\r\n  isLoadedSuccessOrErrorMessage,\r\n  setIsLoadedSuccessOrErrorMessage,\r\n}) {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [inputData, setInputData] = useState(starterData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  const handleCreateClick = (e) => {\r\n    setIsClicked(true);\r\n    setIsLoadedSuccessOrErrorMessage(\"\");\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputData({\r\n      ...inputData,\r\n      tableName: e.target.value,\r\n    });\r\n    //console.log(inputData.tableName);\r\n  };\r\n\r\n  const handleSubmitClick = (e) => {\r\n    setIsClicked(false);\r\n    doFetch();\r\n    //setIsLoaded(\"success\");\r\n  };\r\n\r\n  const doFetch = () => {\r\n    console.log(inputData.tableName + userId);\r\n    let send = JSON.stringify({\r\n      OwningUserID: userId,\r\n      Name: inputData.tableName,\r\n    });\r\n    //Do userInfo fetch here and set returned values to state\r\n    fetch(`http://localhost:5000/api/CreateCategory/${send}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setIsLoadedSuccessOrErrorMessage(\"successCreatingTable\");\r\n          setIsLoaded(\"success\");\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoadedSuccessOrErrorMessage(\"errorCreatingTable\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <button className=\"mainBtn\" onClick={handleCreateClick}>\r\n        Create New Table\r\n      </button>\r\n      <div className=\"separaterBottom\" />\r\n      {isClicked && (\r\n        <div className=\"newAndErrorWrap\">\r\n          <div className=\"newTableNameWrap\">\r\n            <input\r\n              className=\"textInput\"\r\n              name=\"itemCategory\"\r\n              placeholder=\"Item Table Name\"\r\n              size=\"20\"\r\n              maxLength=\"40\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <div className=\"spacer\" />\r\n            <button className=\"mainBtn\" onClick={handleSubmitClick}>\r\n              Submit New Table\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isLoadedSuccessOrErrorMessage === \"errorCreatingTable\" && (\r\n        <div className=\"errorMessage\">Something went wrong.</div>\r\n      )}\r\n      {isLoadedSuccessOrErrorMessage === \"successCreatingTable\" && (\r\n        <div className=\"successMessage\">\r\n          Successfully created new table. Please refresh the page to view and\r\n          add data.\r\n        </div>\r\n      )}\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .spacer {\r\n    margin-right: 10px;\r\n  }\r\n  .newTableNameWrap {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .newAndErrorWrap {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .separaterBottom {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\statisticsPage\\Stat.js",["138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function StatisticsPage({ title, data }) {\r\n  return (\r\n    <PageWrapper>\r\n      <div className=\"displayWrapper\">\r\n        <div>{title}: &nbsp;</div>\r\n        <div>{data}</div>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .displayWrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: 2px solid black;\r\n    padding: 3px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\DisplayAndEditTables.js",["140","141","142"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserTable from \".././tableInfoPage/UserTable\";\r\n\r\nlet starterData = {\r\n  name: \"\",\r\n  unitPrice: \"\",\r\n  baseWeight: \"\",\r\n  weightType: \"\",\r\n  quantityMin: \"\",\r\n  quantityMax: \"\",\r\n  description: \"\",\r\n  relativeChance: \"\",\r\n};\r\n\r\nexport default function DisplayAndEditTables({ tableData }) {\r\n  const [newItemData, setNewItemData] = useState(starterData);\r\n\r\n  const Tables = () => {\r\n    let toReturn = tableData.map((item) => {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <b>{item.table}</b>\r\n          </div>\r\n          <UserTable data={item.data} />\r\n          <div className=\"separaterBottom\" />\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{toReturn}</div>;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div className=\"tableWrap\">\r\n        <Tables />\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .separaterBottom {\r\n    margin-bottom: 10px;\r\n  }\r\n  .tableWrap {\r\n    display: flex;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\GenerateBox.js",["143","144","145","146","147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\n\r\nlet fakeData = [\r\n  {\r\n    item: \"AnItem\",\r\n    embelishments: \"fire\",\r\n    price: \"$30.50\",\r\n  },\r\n  {\r\n    item: \"AnotherItem\",\r\n    embelishments: \"none\",\r\n    price: \"$0.70\",\r\n  },\r\n  {\r\n    item: \"LastItem\",\r\n    embelishments: \"ice\",\r\n    price: \"$100000.90\",\r\n  },\r\n];\r\nexport default function GenerateBox({\r\n  typeBox,\r\n  originalData,\r\n  spicyData,\r\n  userId,\r\n}) {\r\n  const [nextGenerated, setNextGenerated] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n  const [randResult, setRandResult] = useState([]);\r\n  const [numberGenerate, setNumberGenerate] = useState(1);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    //setCounter(counter + 1);\r\n    //setNextGenerated(counter);\r\n\r\n    //Checking if the number to generate is a valid number to enter\r\n    if (numberGenerate.length < 1 || parseInt(numberGenerate) > 20) {\r\n      setIsLoaded(\"invalid\");\r\n      return;\r\n    }\r\n\r\n    //Looping through the data to determine what tables to include\r\n    let tables = [];\r\n    originalData.map((item) => {\r\n      if (item.checked === true) {\r\n        tables.push(item);\r\n      }\r\n    });\r\n    // spicyData.map((item) => {\r\n    //   if (item.checked === true) {\r\n    //     tables.push(item);\r\n    //   }\r\n    // });\r\n\r\n    setIsLoaded(\"okay\");\r\n    doFetch(tables);\r\n    //setRandResult(fakeData);\r\n  };\r\n\r\n  const doFetch = (tablesToInclude) => {\r\n    let send = JSON.stringify({\r\n      NumItems: numberGenerate,\r\n      UserId: userId,\r\n    });\r\n    fetch(`http://localhost:5000/api/RandomItem/${send}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setRandResult(result);\r\n          setIsLoaded(\"loaded\");\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Item\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Weight\",\r\n        accessor: \"baseWeight\",\r\n      },\r\n      {\r\n        Header: \"Weight Type\",\r\n        accessor: \"weightType\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"unitPrice\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data: randResult,\r\n      },\r\n      useSortBy\r\n    );\r\n\r\n  const handleRowClick = (e) => {\r\n    //do something\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    if (Number(e.target.value) || e.target.value === \"\") {\r\n      setNumberGenerate(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <form className=\"generate-form\">\r\n          <table {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th\r\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                      {column.render(\"Header\")}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? \"▼\"\r\n                            : \"▲\"\r\n                          : \" ▲▼\"}\r\n                      </span>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr\r\n                    {...row.getRowProps()}\r\n                    key={i}\r\n                    onClick={() => handleRowClick(row)}\r\n                  >\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"generateWrapper\">\r\n            <input\r\n              readOnly={false}\r\n              value={numberGenerate}\r\n              className=\"textBox\"\r\n              onChange={handleNumberChange}\r\n            />\r\n            <button className=\"mainBtn\" onClick={handleClick}>\r\n              Generate!\r\n            </button>\r\n          </div>\r\n          {isLoaded === \"invalid\" && (\r\n            <div className=\"errorMessage wrapText\">\r\n              Invalid Number to Generate. Please enter a number between 1-20.\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  .wrapText {\r\n    max-width: 350px;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  .generateWrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 15px;\r\n  }\r\n  .generate-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 3px;\r\n  }\r\n  .textBox {\r\n    margin-bottom: 5px;\r\n  }\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    tr:hover {\r\n      th {\r\n        background: var(--mainWhite);\r\n      }\r\n      background: var(--lightGrey);\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.15rem 0.15rem 0.15rem 0.35rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\editTablesPage\\AddItems.js",["150","151","152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CreateTable from \"./CreateTable\";\r\nimport DisplayAndEditTables from \"./DisplayAndEditTables\";\r\n\r\nlet starterData = {\r\n  name: \"\",\r\n  unitPrice: \"\",\r\n  baseWeight: \"\",\r\n  weightType: \"\",\r\n  quantityMin: \"\",\r\n  quantityMax: \"\",\r\n  description: \"\",\r\n  relativeChance: \"\",\r\n};\r\n\r\nexport default function AddItems({\r\n  tables,\r\n  isLoadedSuccessOrErrorMessage,\r\n  setIsLoadedSuccessOrErrorMessage,\r\n}) {\r\n  const [tableData, setTableData] = useState(\"\");\r\n  const [addIsClicked, setAddIsClicked] = useState(false);\r\n  const [newItemData, setNewItemData] = useState(starterData);\r\n  const [goIsClicked, setGoIsClicked] = useState(false);\r\n  const [tableValue, setTableValue] = useState(\"\");\r\n  const [addItemTableId, setAddItemTableId] = useState(-1);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTableData(AddCheckedProperty(tables));\r\n  }, []);\r\n\r\n  const AddCheckedProperty = (tables) => {\r\n    let finishedArray = [];\r\n    tables.map((item) => {\r\n      let curItem = {\r\n        name: item.table,\r\n        id: item.id,\r\n        checked: false,\r\n      };\r\n      //console.log(curItem.name);\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  const handleNewItemClick = (e) => {\r\n    e.preventDefault();\r\n    setAddIsClicked(true);\r\n    setIsLoadedSuccessOrErrorMessage(\"\");\r\n  };\r\n\r\n  const getIdOfTable = () => {\r\n    var radioButtons = document.getElementsByName(\"tableRadioOptions\");\r\n    for (var i = 0; i < radioButtons.length; i++) {\r\n      if (radioButtons[i].checked == true) {\r\n        setAddItemTableId(radioButtons[i].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  const TablesCheckboxes = () => {\r\n    // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n    let checkboxes = tableData.map((item, idx) => {\r\n      let chkstr = \"\";\r\n      //console.log(\"ITEM: \" + item.name);\r\n      return (\r\n        <div className=\"checkboxes\">\r\n          <input\r\n            type=\"radio\"\r\n            //onClick={(e) => handleToggle(e, idx)}\r\n            //onChange={handleChange}\r\n            key={item.id}\r\n            id={item.id}\r\n            name={\"tableRadioOptions\"}\r\n            value={item.name}\r\n            //checked={tableValue}\r\n            //onChange={(e) => handleToggle(e, idx)}\r\n            className=\"checkboxes\"\r\n            //readOnly={true}\r\n          />\r\n          <label className=\"checkboxes\" for={item.id}>\r\n            {item.name}\r\n          </label>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{checkboxes}</div>;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewItemData({\r\n      ...newItemData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNewItemAddClick = (e) => {\r\n    e.preventDefault();\r\n    //console.log(e.target);\r\n    setGoIsClicked(false);\r\n    //doAddFetch();\r\n  };\r\n\r\n  const doAddFetch = () => {\r\n    let send = JSON.stringify({\r\n      CategoryId: addItemTableId,\r\n      Name: newItemData.name,\r\n      UnitPrice: newItemData.unitPrice,\r\n      BaseWeight: newItemData.baseWeight,\r\n      WeightType: newItemData.weightType,\r\n      QuantityMin: newItemData.quantityMin,\r\n      QuantityMax: newItemData.quantityMax,\r\n      Description: newItemData.description,\r\n      RelativeChance: newItemData.relativeChance,\r\n    });\r\n    fetch(`http://localhost:5000/api/CreateItem/${send}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoadedSuccessOrErrorMessage(\"errorAddItem\");\r\n            return;\r\n          } else {\r\n            setIsLoadedSuccessOrErrorMessage(\"successAddItem\");\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoadedSuccessOrErrorMessage(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleGoClick = (e) => {\r\n    e.preventDefault();\r\n    setGoIsClicked(true);\r\n    setAddIsClicked(false);\r\n    getIdOfTable();\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        {!goIsClicked && (\r\n          <button className=\"mainBtn\" onClick={handleNewItemClick}>\r\n            Add New Item\r\n          </button>\r\n        )}\r\n\r\n        {addIsClicked && (\r\n          <div>\r\n            <div>Please select the table to add an item to.</div>\r\n            <TablesCheckboxes />\r\n            <button className=\"mainBtn\" onClick={handleGoClick}>\r\n              Go!\r\n            </button>\r\n          </div>\r\n        )}\r\n        {goIsClicked && (\r\n          <div>\r\n            <form className=\"addNewItemForm\">\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"itemNameInput\"\r\n                placeholder=\"Item Name\"\r\n                size=\"12\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"unitPriceInput\"\r\n                placeholder=\"Item Unit Price\"\r\n                size=\"12\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"baseWeightInput\"\r\n                placeholder=\"Item Base Weight\"\r\n                size=\"12\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"weightTypeInput\"\r\n                placeholder=\"Item Weight Type\"\r\n                size=\"12\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"quantityMinInput\"\r\n                placeholder=\"Item Quantity Min\"\r\n                size=\"12\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"quantityMaxInput\"\r\n                placeholder=\"Item Quantity Max\"\r\n                size=\"12\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"descriptionInput\"\r\n                placeholder=\"Item Description\"\r\n                size=\"20\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <input\r\n                className=\"formInput separaterBottom2\"\r\n                name=\"relativeChanceInput\"\r\n                placeholder=\"Item Relative Chance\"\r\n                size=\"20\"\r\n                maxLength={20}\r\n                onChange={handleInputChange}\r\n              />\r\n              <button className=\"mainBtn\" onClick={handleNewItemAddClick}>\r\n                Add\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n        {isLoadedSuccessOrErrorMessage === \"errorAddItem\" && (\r\n          <div className=\"errorMessage\">Error creating item.</div>\r\n        )}\r\n        {isLoadedSuccessOrErrorMessage === \"successAddItem\" && (\r\n          <div className=\"successMessage\">\r\n            Successfully added item to table.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .separaterBottom {\r\n    margin-bottom: 20px;\r\n  }\r\n  .addNewItemForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .separaterBottom2 {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\ExtrasCheckboxes.js",["161"],"import React from \"react\";\r\n\r\nexport default function ExtrasCheckboxes({ extrasData, setExtrasData }) {\r\n  //const [checkedData, setCheckedData] = useState(areaDescriptionData);\r\n\r\n  const handleToggle = (e, index) => {\r\n    let item = extrasData[index];\r\n    //item.endusetypecode = 99;\r\n    //console.log(item);\r\n    //item.active = e.target.value;\r\n    item.checked = !item.checked;\r\n    e.target.checked = item.checked;\r\n    e.target.value = item.checked;\r\n\r\n    let newState = extrasData\r\n      .slice(0, index)\r\n      .concat(item)\r\n      .concat(extrasData.slice(index + 1));\r\n\r\n    setExtrasData(newState);\r\n    //handleCheckChange(newState);\r\n\r\n    //console.log(checkedData);\r\n  };\r\n  // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n  let checkboxes = extrasData.map((item, idx) => {\r\n    let chkstr = \"\";\r\n    //console.log(\"ITEM: \" + item);\r\n    return (\r\n      <div className=\"checkboxes\">\r\n        <label className=\"checkboxes\">\r\n          <input\r\n            type=\"checkbox\"\r\n            //onClick={(e) => handleToggle(e, idx)}\r\n            //onChange={handleChange}\r\n            key={item.itemCategoryId}\r\n            name={item.name}\r\n            value={item.name}\r\n            checked={item.checked}\r\n            onChange={(e) => handleToggle(e, idx)}\r\n            className=\"checkboxes\"\r\n            readOnly={true}\r\n          />\r\n          {item.name}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n  return <div>{checkboxes}</div>;\r\n}\r\n","C:\\Users\\nicos\\Desktop\\Programming Stuff\\CIS560-Databases\\Team Project\\Frontend\\gurpsfrontend\\src\\components\\generatorPages\\FilterSections\\FilterCheckboxes.js",["162"],"import React from \"react\";\r\n\r\nexport default function FilterCheckboxes({ data, setData }) {\r\n  //const [checkedData, setCheckedData] = useState(areaDescriptionData);\r\n\r\n  const handleToggle = (e, index) => {\r\n    let item = data[index];\r\n    //item.endusetypecode = 99;\r\n    //console.log(item);\r\n    //item.active = e.target.value;\r\n    item.checked = !item.checked;\r\n    e.target.checked = item.checked;\r\n    e.target.value = item.checked;\r\n\r\n    let newState = data\r\n      .slice(0, index)\r\n      .concat(item)\r\n      .concat(data.slice(index + 1));\r\n\r\n    setData(newState);\r\n    //handleCheckChange(newState);\r\n\r\n    //console.log(checkedData);\r\n  };\r\n  // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n  let checkboxes = data.map((item, idx) => {\r\n    let chkstr = \"\";\r\n    //console.log(\"ITEM: \" + item);\r\n    return (\r\n      <div className=\"checkboxes\">\r\n        <label className=\"checkboxes\">\r\n          <input\r\n            type=\"checkbox\"\r\n            //onClick={(e) => handleToggle(e, idx)}\r\n            //onChange={handleChange}\r\n            key={item.id}\r\n            name={item.name}\r\n            value={item.name}\r\n            checked={item.checked}\r\n            onChange={(e) => handleToggle(e, idx)}\r\n            className=\"checkboxes\"\r\n            readOnly={true}\r\n          />\r\n          {item.name}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n  return <div>{checkboxes}</div>;\r\n}\r\n",{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":20,"column":10,"nodeType":"169","messageId":"170","endLine":20,"endColumn":18},{"ruleId":"167","severity":1,"message":"171","line":31,"column":9,"nodeType":"169","messageId":"170","endLine":31,"endColumn":22},{"ruleId":"167","severity":1,"message":"172","line":134,"column":7,"nodeType":"169","messageId":"170","endLine":134,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":19,"column":9,"nodeType":"175","endLine":19,"endColumn":69},{"ruleId":"167","severity":1,"message":"176","line":53,"column":10,"nodeType":"169","messageId":"170","endLine":53,"endColumn":25},{"ruleId":"167","severity":1,"message":"177","line":53,"column":27,"nodeType":"169","messageId":"170","endLine":53,"endColumn":45},{"ruleId":"167","severity":1,"message":"168","line":57,"column":10,"nodeType":"169","messageId":"170","endLine":57,"endColumn":18},{"ruleId":"167","severity":1,"message":"178","line":64,"column":9,"nodeType":"169","messageId":"170","endLine":64,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":102,"column":21,"nodeType":"181","messageId":"182","endLine":102,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":42,"column":10,"nodeType":"169","messageId":"170","endLine":42,"endColumn":18},{"ruleId":"167","severity":1,"message":"178","line":48,"column":9,"nodeType":"169","messageId":"170","endLine":48,"endColumn":16},{"ruleId":"167","severity":1,"message":"183","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"184","line":51,"column":21,"nodeType":"169","messageId":"170","endLine":51,"endColumn":33},{"ruleId":"167","severity":1,"message":"185","line":32,"column":9,"nodeType":"169","messageId":"170","endLine":32,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":18},{"ruleId":"167","severity":1,"message":"178","line":20,"column":9,"nodeType":"169","messageId":"170","endLine":20,"endColumn":16},{"ruleId":"167","severity":1,"message":"183","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"186","line":25,"column":10,"nodeType":"169","messageId":"170","endLine":25,"endColumn":17},{"ruleId":"167","severity":1,"message":"187","line":25,"column":19,"nodeType":"169","messageId":"170","endLine":25,"endColumn":29},{"ruleId":"167","severity":1,"message":"188","line":26,"column":10,"nodeType":"169","messageId":"170","endLine":26,"endColumn":21},{"ruleId":"167","severity":1,"message":"189","line":26,"column":23,"nodeType":"169","messageId":"170","endLine":26,"endColumn":37},{"ruleId":"167","severity":1,"message":"190","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":15},{"ruleId":"167","severity":1,"message":"191","line":39,"column":10,"nodeType":"169","messageId":"170","endLine":39,"endColumn":20},{"ruleId":"167","severity":1,"message":"192","line":39,"column":22,"nodeType":"169","messageId":"170","endLine":39,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":40,"column":10,"nodeType":"169","messageId":"170","endLine":40,"endColumn":18},{"ruleId":"167","severity":1,"message":"178","line":47,"column":9,"nodeType":"169","messageId":"170","endLine":47,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":78,"column":21,"nodeType":"181","messageId":"182","endLine":78,"endColumn":23},{"ruleId":"167","severity":1,"message":"193","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":24},{"ruleId":"167","severity":1,"message":"183","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"194","line":6,"column":20,"nodeType":"169","messageId":"170","endLine":6,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":15,"column":10,"nodeType":"169","messageId":"170","endLine":15,"endColumn":18},{"ruleId":"167","severity":1,"message":"195","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"183","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"183","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"196","line":17,"column":10,"nodeType":"169","messageId":"170","endLine":17,"endColumn":21},{"ruleId":"167","severity":1,"message":"197","line":17,"column":23,"nodeType":"169","messageId":"170","endLine":17,"endColumn":37},{"ruleId":"167","severity":1,"message":"183","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"198","line":5,"column":5,"nodeType":"169","messageId":"170","endLine":5,"endColumn":13},{"ruleId":"167","severity":1,"message":"199","line":28,"column":10,"nodeType":"169","messageId":"170","endLine":28,"endColumn":23},{"ruleId":"167","severity":1,"message":"200","line":28,"column":25,"nodeType":"169","messageId":"170","endLine":28,"endColumn":41},{"ruleId":"167","severity":1,"message":"201","line":29,"column":10,"nodeType":"169","messageId":"170","endLine":29,"endColumn":17},{"ruleId":"167","severity":1,"message":"202","line":29,"column":19,"nodeType":"169","messageId":"170","endLine":29,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":47,"column":29,"nodeType":"181","messageId":"182","endLine":47,"endColumn":31},{"ruleId":"167","severity":1,"message":"203","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":19},{"ruleId":"167","severity":1,"message":"204","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":28},{"ruleId":"167","severity":1,"message":"205","line":26,"column":10,"nodeType":"169","messageId":"170","endLine":26,"endColumn":20},{"ruleId":"167","severity":1,"message":"206","line":26,"column":22,"nodeType":"169","messageId":"170","endLine":26,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":28,"column":10,"nodeType":"169","messageId":"170","endLine":28,"endColumn":18},{"ruleId":"167","severity":1,"message":"194","line":28,"column":20,"nodeType":"169","messageId":"170","endLine":28,"endColumn":31},{"ruleId":"207","severity":1,"message":"208","line":32,"column":6,"nodeType":"209","endLine":32,"endColumn":8,"suggestions":"210"},{"ruleId":"179","severity":1,"message":"180","line":36,"column":23,"nodeType":"181","messageId":"182","endLine":36,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":57,"column":35,"nodeType":"213","messageId":"214","endLine":57,"endColumn":37},{"ruleId":"167","severity":1,"message":"215","line":67,"column":11,"nodeType":"169","messageId":"170","endLine":67,"endColumn":17},{"ruleId":"167","severity":1,"message":"216","line":107,"column":9,"nodeType":"169","messageId":"170","endLine":107,"endColumn":19},{"ruleId":"167","severity":1,"message":"215","line":28,"column":9,"nodeType":"169","messageId":"170","endLine":28,"endColumn":15},{"ruleId":"167","severity":1,"message":"215","line":28,"column":9,"nodeType":"169","messageId":"170","endLine":28,"endColumn":15},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","'fetchUserData' is assigned a value but never used.","'LoginPageWrapper' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'tablesToInclude' is assigned a value but never used.","'setTablesToInclude' is assigned a value but never used.","'doFetch' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'setTableData' is assigned a value but never used.","'jsonUn' is assigned a value but never used.","'homeLit' is assigned a value but never used.","'setHomeLit' is assigned a value but never used.","'registerLit' is assigned a value but never used.","'setRegisterLit' is assigned a value but never used.","'Filters' is defined but never used.","'extrasData' is assigned a value but never used.","'setExtrasData' is assigned a value but never used.","'ExtrasCheckboxes' is defined but never used.","'setIsLoaded' is assigned a value but never used.","'useState' is defined but never used.","'newItemData' is assigned a value but never used.","'setNewItemData' is assigned a value but never used.","'fakeData' is assigned a value but never used.","'nextGenerated' is assigned a value but never used.","'setNextGenerated' is assigned a value but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'CreateTable' is defined but never used.","'DisplayAndEditTables' is defined but never used.","'tableValue' is assigned a value but never used.","'setTableValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tables'. Either include it or remove the dependency array. If 'setTableData' needs the current value of 'tables', you can also switch to useReducer instead of useState and read 'tables' in the reducer.","ArrayExpression",["219"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'chkstr' is assigned a value but never used.","'doAddFetch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},"Update the dependencies array to be: [tables]",{"range":"222","text":"223"},[972,974],"[tables]"]