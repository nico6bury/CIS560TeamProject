{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicos\\\\Desktop\\\\Programming Stuff\\\\CIS560-Databases\\\\Team Project\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\generatorPages\\\\FilterSections\\\\FilterCheckboxes.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterCheckboxes({\n  data,\n  setData\n}) {\n  //const [checkedData, setCheckedData] = useState(areaDescriptionData);\n  const handleToggle = (e, index) => {\n    let item = data[index]; //item.endusetypecode = 99;\n    //console.log(item);\n    //item.active = e.target.value;\n\n    item.checked = !item.checked;\n    e.target.checked = item.checked;\n    e.target.value = item.checked;\n    let newState = data.slice(0, index).concat(item).concat(data.slice(index + 1));\n    setData(newState); //handleCheckChange(newState);\n    //console.log(checkedData);\n  }; // setState(s => ({ ...s, [target.name]:!s[target.name]}));\n\n\n  let checkboxes = data.map((item, idx) => {\n    let chkstr = \"\"; //console.log(\"ITEM: \" + item);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkboxes\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkboxes\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\" //onClick={(e) => handleToggle(e, idx)}\n          //onChange={handleChange}\n          ,\n          name: item.name,\n          value: item.name,\n          checked: item.checked,\n          onChange: e => handleToggle(e, idx),\n          className: \"checkboxes\",\n          readOnly: true\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), item.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: checkboxes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_c = FilterCheckboxes;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterCheckboxes\");","map":{"version":3,"sources":["C:/Users/nicos/Desktop/Programming Stuff/CIS560-Databases/Team Project/Frontend/gurpsfrontend/src/components/generatorPages/FilterSections/FilterCheckboxes.js"],"names":["React","FilterCheckboxes","data","setData","handleToggle","e","index","item","checked","target","value","newState","slice","concat","checkboxes","map","idx","chkstr","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA1B,EAA6C;AAC1D;AAEA,QAAMC,YAAY,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACjC,QAAIC,IAAI,GAAGL,IAAI,CAACI,KAAD,CAAf,CADiC,CAEjC;AACA;AACA;;AACAC,IAAAA,IAAI,CAACC,OAAL,GAAe,CAACD,IAAI,CAACC,OAArB;AACAH,IAAAA,CAAC,CAACI,MAAF,CAASD,OAAT,GAAmBD,IAAI,CAACC,OAAxB;AACAH,IAAAA,CAAC,CAACI,MAAF,CAASC,KAAT,GAAiBH,IAAI,CAACC,OAAtB;AAEA,QAAIG,QAAQ,GAAGT,IAAI,CAChBU,KADY,CACN,CADM,EACHN,KADG,EAEZO,MAFY,CAELN,IAFK,EAGZM,MAHY,CAGLX,IAAI,CAACU,KAAL,CAAWN,KAAK,GAAG,CAAnB,CAHK,CAAf;AAKAH,IAAAA,OAAO,CAACQ,QAAD,CAAP,CAdiC,CAejC;AAEA;AACD,GAlBD,CAH0D,CAsB1D;;;AAEA,MAAIG,UAAU,GAAGZ,IAAI,CAACa,GAAL,CAAS,CAACR,IAAD,EAAOS,GAAP,KAAe;AACvC,QAAIC,MAAM,GAAG,EAAb,CADuC,CAEvC;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP,CAEE;AACA;AAHF;AAKE,UAAA,IAAI,EAAEV,IAAI,CAACW,IALb;AAME,UAAA,KAAK,EAAEX,IAAI,CAACW,IANd;AAOE,UAAA,OAAO,EAAEX,IAAI,CAACC,OAPhB;AAQE,UAAA,QAAQ,EAAGH,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIW,GAAJ,CAR/B;AASE,UAAA,SAAS,EAAC,YATZ;AAUE,UAAA,QAAQ,EAAE;AAVZ,WAIOT,IAAI,CAACY,EAJZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAaGZ,IAAI,CAACW,IAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GAtBgB,CAAjB;AAuBA,sBAAO;AAAA,cAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAhDuBb,gB","sourcesContent":["import React from \"react\";\r\n\r\nexport default function FilterCheckboxes({ data, setData }) {\r\n  //const [checkedData, setCheckedData] = useState(areaDescriptionData);\r\n\r\n  const handleToggle = (e, index) => {\r\n    let item = data[index];\r\n    //item.endusetypecode = 99;\r\n    //console.log(item);\r\n    //item.active = e.target.value;\r\n    item.checked = !item.checked;\r\n    e.target.checked = item.checked;\r\n    e.target.value = item.checked;\r\n\r\n    let newState = data\r\n      .slice(0, index)\r\n      .concat(item)\r\n      .concat(data.slice(index + 1));\r\n\r\n    setData(newState);\r\n    //handleCheckChange(newState);\r\n\r\n    //console.log(checkedData);\r\n  };\r\n  // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n  let checkboxes = data.map((item, idx) => {\r\n    let chkstr = \"\";\r\n    //console.log(\"ITEM: \" + item);\r\n    return (\r\n      <div className=\"checkboxes\">\r\n        <label className=\"checkboxes\">\r\n          <input\r\n            type=\"checkbox\"\r\n            //onClick={(e) => handleToggle(e, idx)}\r\n            //onChange={handleChange}\r\n            key={item.id}\r\n            name={item.name}\r\n            value={item.name}\r\n            checked={item.checked}\r\n            onChange={(e) => handleToggle(e, idx)}\r\n            className=\"checkboxes\"\r\n            readOnly={true}\r\n          />\r\n          {item.name}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n  return <div>{checkboxes}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}