{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\loginSignUpPages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage({\n  setIsLoggedIn\n}) {\n  _s();\n\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault(); //If the user hasn't entered anything in the boxes, just return\n\n    if (username.length < 1 || password.length < 1) {\n      setIsLoaded(\"incorrect\");\n      return;\n    } //The following will attempt to log the user in\n    //doFetch();\n    //The following is for testing purposes and is to simulate a call to the backend to log the user in\n    //setIsLoaded(\"incorrect\");\n\n\n    setIsLoggedIn(true);\n  };\n\n  const doFetch = () => {\n    fetch(\"http://localhost:5000/req/login\", {\n      method: \"post\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password //Send username and password\n\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If error\n\n      if (result.response.apiStatusCode !== \"OK\") {\n        setIsLoaded(\"error\"); //return;\n      } //If the user is not logged in\n      else if (result.response.data.loggedIn === 0) {\n        setIsLoggedIn(false);\n        setIsLoaded(\"incorrect\"); //return;\n      } //The user is logged in\n      else if (result.response.data.loggedIn === 1) {\n        setIsLoggedIn(true); //return;\n      } //We somehow made it down here, just print the invalid message\n      else {\n        setIsLoaded(\"incorrect\");\n        setIsLoggedIn(false);\n      } //The user is logged in\n      //setIsLoggedIn(true);\n      //console.log(result);\n\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\");\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginLabel\",\n        children: \"GURPS Random Generator Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mainBtn\",\n          onClick: handleSubmit,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), isLoaded === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: \"Error logging in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), isLoaded === \"incorrect\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: \"Incorrect username or password. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"3vhVgjs0qKRX2lRX82slLg8Xqrg=\");\n\n_c = LoginPage;\nconst PageWrapper = styled.nav`\n  /* .formWrapper {\n    display: flex !important;\n    justify-content: center !important;\n    height: 100% !important;\n    width: 100% !important;\n    flex-direction: column;\n    flex: 2;\n    align-items: stretch;\n    flex-grow: 1;\n  } */\n  .inputDiv {\n    margin-bottom: 5px;\n  }\n  .loginLabel {\n    font-size: 1.8rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: var(--mainBlack);\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/loginSignUpPages/LoginPage.js"],"names":["React","useState","styled","LoginPage","setIsLoggedIn","username","setUserName","password","setPassword","isLoaded","setIsLoaded","handleSubmit","e","preventDefault","length","doFetch","fetch","method","headers","body","JSON","stringify","then","res","json","result","console","log","response","apiStatusCode","data","loggedIn","error","target","value","PageWrapper","nav"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function LoginPage({ setIsLoggedIn }) {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //If the user hasn't entered anything in the boxes, just return\r\n    if (username.length < 1 || password.length < 1) {\r\n      setIsLoaded(\"incorrect\");\r\n      return;\r\n    }\r\n    //The following will attempt to log the user in\r\n    //doFetch();\r\n\r\n    //The following is for testing purposes and is to simulate a call to the backend to log the user in\r\n    //setIsLoaded(\"incorrect\");\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/req/login\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n        //Send username and password\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If error\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            //return;\r\n          }\r\n          //If the user is not logged in\r\n          else if (result.response.data.loggedIn === 0) {\r\n            setIsLoggedIn(false);\r\n            setIsLoaded(\"incorrect\");\r\n            //return;\r\n          }\r\n          //The user is logged in\r\n          else if (result.response.data.loggedIn === 1) {\r\n            setIsLoggedIn(true);\r\n            //return;\r\n          }\r\n          //We somehow made it down here, just print the invalid message\r\n          else {\r\n            setIsLoaded(\"incorrect\");\r\n            setIsLoggedIn(false);\r\n          }\r\n          //The user is logged in\r\n          //setIsLoggedIn(true);\r\n          //console.log(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <form className=\"formWrapper\">\r\n        <div className=\"loginLabel\">GURPS Random Generator Login</div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Username</p> */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"inputDiv\">\r\n          {/* <p>Password</p> */}\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"mainBtn\" onClick={handleSubmit}>\r\n            Sign in\r\n          </button>\r\n        </div>\r\n        {isLoaded === \"error\" && (\r\n          <div className=\"errorMessage\">Error logging in.</div>\r\n        )}\r\n        {isLoaded === \"incorrect\" && (\r\n          <div className=\"errorMessage\">\r\n            Incorrect username or password. Please try again.\r\n          </div>\r\n        )}\r\n      </form>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  /* .formWrapper {\r\n    display: flex !important;\r\n    justify-content: center !important;\r\n    height: 100% !important;\r\n    width: 100% !important;\r\n    flex-direction: column;\r\n    flex: 2;\r\n    align-items: stretch;\r\n    flex-grow: 1;\r\n  } */\r\n  .inputDiv {\r\n    margin-bottom: 5px;\r\n  }\r\n  .loginLabel {\r\n    font-size: 1.8rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: var(--mainBlack);\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}