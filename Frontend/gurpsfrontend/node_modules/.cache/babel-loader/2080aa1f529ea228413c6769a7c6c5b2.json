{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\generatorPages\\\\OriginalGeneratorPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport GenerateBox from \"./GenerateBox\";\nimport Filters from \"./Filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fakeICD = [{\n  name: \"Fibers and Fabrics\",\n  itemCategoryId: 1,\n  checked: true\n}, {\n  name: \"Spices\",\n  itemCategoryId: 2,\n  checked: true\n}, {\n  name: \"Jewelry\",\n  itemCategoryId: 3,\n  checked: false\n}];\nlet declaredExtrasData = [{\n  name: \"Embelishments\",\n  id: 1,\n  checked: true\n}, {\n  name: \"Enchantments\",\n  id: 2,\n  checkd: true\n}];\nexport default function OriginalGeneratorPage({\n  userId\n}) {\n  _s();\n\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\n  const [isLoaded, setIsLoaded] = useState(\"\");\n  useEffect(() => {//fetch the itemCategoryData\n    //doFetch();\n  }, []);\n\n  const doFetch = () => {\n    fetch(\"http://localhost:5000/api/RetrieveDefaultItemCategories\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({})\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      setIsLoaded(\"loaded\");\n      setItemCategoryData(mapDataToCheckboxes(result));\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  const mapDataToCheckboxes = data => {\n    let finishedArray = [];\n    data.map(item => {\n      let curItem = {\n        name: item.name,\n        id: item.id,\n        checked: true\n      };\n      finishedArray.push(curItem);\n    });\n    return finishedArray;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Original GURPS Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageContent\",\n      children: [/*#__PURE__*/_jsxDEV(GenerateBox, {\n        typeBox: \"Original\",\n        originalData: itemCategoryData,\n        spicyData: \"\",\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OriginalGeneratorPage, \"O8ESlIBfc8ro/XKkiD3X02Cniv4=\");\n\n_c = OriginalGeneratorPage;\nconst PageWrapper = styled.nav`\n  display: flex;\n  flex-direction: column;\n\n  .pageContent {\n    display: flex;\n    flex-direction: row;\n  }\n  .spacer1 {\n    margin-right: 100px;\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OriginalGeneratorPage\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/generatorPages/OriginalGeneratorPage.js"],"names":["React","useState","useEffect","styled","GenerateBox","Filters","fakeICD","name","itemCategoryId","checked","declaredExtrasData","id","checkd","OriginalGeneratorPage","userId","itemCategoryData","setItemCategoryData","extrasData","setExtrasData","isLoaded","setIsLoaded","doFetch","fetch","method","headers","body","JSON","stringify","then","res","json","result","console","log","mapDataToCheckboxes","error","data","finishedArray","map","item","curItem","push","PageWrapper","nav"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAIC,OAAO,GAAG,CACZ;AACEC,EAAAA,IAAI,EAAE,oBADR;AAEEC,EAAAA,cAAc,EAAE,CAFlB;AAGEC,EAAAA,OAAO,EAAE;AAHX,CADY,EAMZ;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,cAAc,EAAE,CAFlB;AAGEC,EAAAA,OAAO,EAAE;AAHX,CANY,EAWZ;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,cAAc,EAAE,CAFlB;AAGEC,EAAAA,OAAO,EAAE;AAHX,CAXY,CAAd;AAkBA,IAAIC,kBAAkB,GAAG,CACvB;AACEH,EAAAA,IAAI,EAAE,eADR;AAEEI,EAAAA,EAAE,EAAE,CAFN;AAGEF,EAAAA,OAAO,EAAE;AAHX,CADuB,EAMvB;AACEF,EAAAA,IAAI,EAAE,cADR;AAEEI,EAAAA,EAAE,EAAE,CAFN;AAGEC,EAAAA,MAAM,EAAE;AAHV,CANuB,CAAzB;AAaA,eAAe,SAASC,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA2C;AAAA;;AACxD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAACK,OAAD,CAAxD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAACS,kBAAD,CAA5C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMmB,OAAO,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,yDAAD,EAA4D;AAC/DC,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,4CAAoC;AAF7B,OAFsD;AAM/D;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAPyD,KAA5D,CAAL,CASGC,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAWKG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADU,CAEV;;AAEAX,MAAAA,WAAW,CAAC,QAAD,CAAX;AACAJ,MAAAA,mBAAmB,CAACkB,mBAAmB,CAACH,MAAD,CAApB,CAAnB;AACD,KAjBL,EAkBI;AACA;AACA;AACCI,IAAAA,KAAD,IAAW;AACTf,MAAAA,WAAW,CAAC,OAAD,CAAX,CADS,CAET;AACD,KAxBL;AA0BD,GA3BD;;AA6BA,QAAMc,mBAAmB,GAAIE,IAAD,IAAU;AACpC,QAAIC,aAAa,GAAG,EAApB;AACAD,IAAAA,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AACjB,UAAIC,OAAO,GAAG;AACZjC,QAAAA,IAAI,EAAEgC,IAAI,CAAChC,IADC;AAEZI,QAAAA,EAAE,EAAE4B,IAAI,CAAC5B,EAFG;AAGZF,QAAAA,OAAO,EAAE;AAHG,OAAd;AAKA4B,MAAAA,aAAa,CAACI,IAAd,CAAmBD,OAAnB;AACD,KAPD;AAQA,WAAOH,aAAP;AACD,GAXD;;AAaA,sBACE,QAAC,WAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,YAAY,EAAEtB,gBAFhB;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,MAAM,EAAED;AAJV;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzEuBD,qB;;KAAAA,qB;AA2ExB,MAAM6B,WAAW,GAAGvC,MAAM,CAACwC,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenerateBox from \"./GenerateBox\";\r\nimport Filters from \"./Filters\";\r\n\r\nlet fakeICD = [\r\n  {\r\n    name: \"Fibers and Fabrics\",\r\n    itemCategoryId: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Spices\",\r\n    itemCategoryId: 2,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Jewelry\",\r\n    itemCategoryId: 3,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nlet declaredExtrasData = [\r\n  {\r\n    name: \"Embelishments\",\r\n    id: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Enchantments\",\r\n    id: 2,\r\n    checkd: true,\r\n  },\r\n];\r\n\r\nexport default function OriginalGeneratorPage({ userId }) {\r\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\r\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //fetch the itemCategoryData\r\n    //doFetch();\r\n  }, []);\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/api/RetrieveDefaultItemCategories\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({}),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n\r\n          setIsLoaded(\"loaded\");\r\n          setItemCategoryData(mapDataToCheckboxes(result));\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const mapDataToCheckboxes = (data) => {\r\n    let finishedArray = [];\r\n    data.map((item) => {\r\n      let curItem = {\r\n        name: item.name,\r\n        id: item.id,\r\n        checked: true,\r\n      };\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>Original GURPS Generator</h1>\r\n      <div className=\"pageContent\">\r\n        <GenerateBox\r\n          typeBox=\"Original\"\r\n          originalData={itemCategoryData}\r\n          spicyData={\"\"}\r\n          userId={userId}\r\n        />\r\n        <div className=\"spacer1\" />\r\n        {/* <Filters\r\n          itemCategoryData={itemCategoryData}\r\n          setItemCategoryData={setItemCategoryData}\r\n          extrasData={extrasData}\r\n          setExtrasData={setExtrasData}\r\n          isSpicy={false}\r\n        ></Filters> */}\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .pageContent {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .spacer1 {\r\n    margin-right: 100px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}