{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicos\\\\Desktop\\\\Programming Stuff\\\\CIS560-Databases\\\\Team Project\\\\Frontend\\\\gurpsfrontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Route, Switch } from \"react-router\";\nimport OriginalGeneratorPage from \"./components/generatorPages/OriginalGeneratorPage\";\nimport SpicyGeneratorPage from \"./components/generatorPages/SpicyGeneratorPage\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport TableInfoPage from \"./components/tableInfoPage/TableInfoPage\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport \"./App.css\";\nimport LoginPage from \"./components/loginSignUpPages/LoginPage\";\nimport SignUpPage from \"./components/loginSignUpPages/SignUpPage\";\nimport EditTablesPage from \"./components/editTablesPage/EditTablesPage\";\nimport StatisticsPage from \"./components/statisticsPage/StatisticsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(null);\n  useEffect(() => {\n    //fetchUserData();\n    //The following is to simulate a call to fetchUserData()\n    //setIsLoggedIn(true);\n    setIsLoaded(\"loaded\"); //setUserName(\"\");\n  }, [isLoggedIn]);\n\n  const fetchUserData = () => {\n    //Do userInfo fetch here and set returned values to state\n    fetch(\"http://localhost:5000/api/Overall\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({})\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n      // if (result.response.apiStatusCode !== \"OK\") {\n      //   setIsLoaded(\"error\");\n      //   setIsLoggedIn(false);\n      //   return;\n      // }\n      // //If the user is not logged in\n      // if (result.response.data.loggedIn === 0) {\n      //   setIsLoggedIn(false);\n      //   //setIsLoaded(\"incorrect\");\n      //   return;\n      // }\n      // //The user is logged in\n      // if (result.response.data.loggedIn === 1) {\n      //   setIsLoggedIn(true);\n      //   setUserId(result.response.data.dealerid);\n      //   setUserName(result.response.data.dealerName);\n      //   setIsLoaded(\"loaded\");\n      // }\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userName: userName,\n        isLoggedIn: isLoggedIn,\n        setIsLoggedIn: setIsLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: OriginalGeneratorPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            render: props => /*#__PURE__*/_jsxDEV(LoginPage, {\n              setIsLoggedIn: setIsLoggedIn,\n              setUserId: setUserId,\n              setFinalUserName: setUserName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            render: props => /*#__PURE__*/_jsxDEV(SignUpPage, {\n              setIsLoggedIn: setIsLoggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/spicygenerator\",\n              component: SpicyGeneratorPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/tableinfo\",\n              component: TableInfoPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/edittables\",\n              render: props => /*#__PURE__*/_jsxDEV(EditTablesPage, {\n                userId: userId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/statistics\",\n              component: StatisticsPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uPVoJmXQCSN19ZNVje50j1Y6mvM=\");\n\n_c = App;\nconst PageWrapper = styled.nav`\n  //display: flex;\n\n  .contentWrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: left;\n  }\n`;\n_c2 = PageWrapper;\nconst LoginPageWrapper = styled.nav`\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n  color: red;\n`;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/nicos/Desktop/Programming Stuff/CIS560-Databases/Team Project/Frontend/gurpsfrontend/src/App.js"],"names":["useState","useEffect","styled","Route","Switch","OriginalGeneratorPage","SpicyGeneratorPage","Header","Sidebar","TableInfoPage","Fragment","LoginPage","SignUpPage","EditTablesPage","StatisticsPage","App","isLoggedIn","setIsLoggedIn","userName","setUserName","userId","setUserId","isLoaded","setIsLoaded","fetchUserData","fetch","method","headers","body","JSON","stringify","then","res","json","result","console","log","error","props","PageWrapper","nav","LoginPageWrapper"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport OriginalGeneratorPage from \"./components/generatorPages/OriginalGeneratorPage\";\r\nimport SpicyGeneratorPage from \"./components/generatorPages/SpicyGeneratorPage\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport TableInfoPage from \"./components/tableInfoPage/TableInfoPage\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport \"./App.css\";\r\nimport LoginPage from \"./components/loginSignUpPages/LoginPage\";\r\nimport SignUpPage from \"./components/loginSignUpPages/SignUpPage\";\r\nimport EditTablesPage from \"./components/editTablesPage/EditTablesPage\";\r\nimport StatisticsPage from \"./components/statisticsPage/StatisticsPage\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //fetchUserData();\r\n\r\n    //The following is to simulate a call to fetchUserData()\r\n    //setIsLoggedIn(true);\r\n    setIsLoaded(\"loaded\");\r\n    //setUserName(\"\");\r\n  }, [isLoggedIn]);\r\n\r\n  const fetchUserData = () => {\r\n    //Do userInfo fetch here and set returned values to state\r\n    fetch(\"http://localhost:5000/api/Overall\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({}),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          // if (result.response.apiStatusCode !== \"OK\") {\r\n          //   setIsLoaded(\"error\");\r\n          //   setIsLoggedIn(false);\r\n          //   return;\r\n          // }\r\n          // //If the user is not logged in\r\n          // if (result.response.data.loggedIn === 0) {\r\n          //   setIsLoggedIn(false);\r\n          //   //setIsLoaded(\"incorrect\");\r\n          //   return;\r\n          // }\r\n          // //The user is logged in\r\n          // if (result.response.data.loggedIn === 1) {\r\n          //   setIsLoggedIn(true);\r\n          //   setUserId(result.response.data.dealerid);\r\n          //   setUserName(result.response.data.dealerName);\r\n          //   setIsLoaded(\"loaded\");\r\n          // }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <Header\r\n          userName={userName}\r\n          isLoggedIn={isLoggedIn}\r\n          setIsLoggedIn={setIsLoggedIn}\r\n        />\r\n        <div className=\"contentWrapper\">\r\n          <Sidebar isLoggedIn={isLoggedIn} />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={OriginalGeneratorPage} />\r\n            <Route\r\n              path=\"/login\"\r\n              render={(props) => (\r\n                <LoginPage\r\n                  setIsLoggedIn={setIsLoggedIn}\r\n                  setUserId={setUserId}\r\n                  setFinalUserName={setUserName}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/signup\"\r\n              render={(props) => <SignUpPage setIsLoggedIn={setIsLoggedIn} />}\r\n            />\r\n            {isLoggedIn && (\r\n              <Fragment>\r\n                <Route path=\"/spicygenerator\" component={SpicyGeneratorPage} />\r\n                <Route path=\"/tableinfo\" component={TableInfoPage} />\r\n                <Route\r\n                  path=\"/edittables\"\r\n                  render={(props) => <EditTablesPage userId={userId} />}\r\n                />\r\n                <Route path=\"/statistics\" component={StatisticsPage} />\r\n              </Fragment>\r\n            )}\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  //display: flex;\r\n\r\n  .contentWrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: left;\r\n  }\r\n`;\r\n\r\nconst LoginPageWrapper = styled.nav`\r\n  display: flex !important;\r\n  align-items: center !important;\r\n  justify-content: center !important;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-grow: 1;\r\n  color: red;\r\n`;\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}