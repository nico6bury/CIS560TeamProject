{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\tableInfoPage\\\\TableInfoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport UserTable from \"./UserTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fakeUserData = [{\n  table: \"swords\",\n  creatingUser: \"User1\",\n  data: [{\n    name: \"wooden sword\",\n    id: 1,\n    basePrice: \"34.5\"\n  }, {\n    name: \"metal sword\",\n    id: 2,\n    basePrice: \"100.4\"\n  }]\n}, {\n  table: \"animals\",\n  creatingUser: \"User2\",\n  data: [{\n    name: \"flamingo\",\n    id: 1,\n    basePrice: \"5.00\"\n  }, {\n    name: \"tiger\",\n    id: 2,\n    basePrice: \"6.89\"\n  }]\n}];\nexport default function TableInfoPage() {\n  _s();\n\n  const [userTables, setUserTables] = useState(fakeUserData);\n  const [isLoaded, setIsLoaded] = useState(\"\");\n  useEffect(() => {//doFetch();\n  }, []);\n\n  const doFetch = () => {\n    fetch(\"http://localhost:5000/api/RetrieveAllItems\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({\n        username: \"getUserDefinedTables\"\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      setUserTables(result);\n      setIsLoaded(\"loaded\");\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  const Tables = () => {\n    let toReturn = userTables.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [item.table, \" - \", item.creatingUser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableWrap\",\n          children: /*#__PURE__*/_jsxDEV(UserTable, {\n            data: item.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: toReturn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User-Defined Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tables, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableInfoPage, \"zOynlLkDR9q26dqJj00Qmkg9TNk=\");\n\n_c = TableInfoPage;\nconst PageWrapper = styled.nav`\n  .tableWrap {\n    display: flex;\n    margin-right: 20px;\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableInfoPage\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/tableInfoPage/TableInfoPage.js"],"names":["React","useState","useEffect","styled","UserTable","fakeUserData","table","creatingUser","data","name","id","basePrice","TableInfoPage","userTables","setUserTables","isLoaded","setIsLoaded","doFetch","fetch","method","headers","body","JSON","stringify","username","then","res","json","result","console","log","error","Tables","toReturn","map","item","PageWrapper","nav"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserTable from \"./UserTable\";\r\n\r\nlet fakeUserData = [\r\n  {\r\n    table: \"swords\",\r\n    creatingUser: \"User1\",\r\n    data: [\r\n      {\r\n        name: \"wooden sword\",\r\n        id: 1,\r\n        basePrice: \"34.5\",\r\n      },\r\n      {\r\n        name: \"metal sword\",\r\n        id: 2,\r\n        basePrice: \"100.4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    table: \"animals\",\r\n    creatingUser: \"User2\",\r\n    data: [\r\n      {\r\n        name: \"flamingo\",\r\n        id: 1,\r\n        basePrice: \"5.00\",\r\n      },\r\n      {\r\n        name: \"tiger\",\r\n        id: 2,\r\n        basePrice: \"6.89\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function TableInfoPage() {\r\n  const [userTables, setUserTables] = useState(fakeUserData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //doFetch();\r\n  }, []);\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000/api/RetrieveAllItems\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        username: \"getUserDefinedTables\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          setUserTables(result);\r\n          setIsLoaded(\"loaded\");\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const Tables = () => {\r\n    let toReturn = userTables.map((item) => {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <b>\r\n              {item.table} - {item.creatingUser}\r\n            </b>\r\n          </div>\r\n          <div className=\"tableWrap\">\r\n            <UserTable data={item.data} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{toReturn}</div>;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>User-Defined Tables</h1>\r\n      <Tables />\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .tableWrap {\r\n    display: flex;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}