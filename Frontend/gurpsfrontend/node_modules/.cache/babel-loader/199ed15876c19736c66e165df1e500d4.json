{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\tableInfoPage\\\\TableInfoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport UserTable from \"./UserTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fakeUserData = [{\n  table: \"swords\",\n  data: [{\n    name: \"wooden sword\",\n    id: 1\n  }, {\n    name: \"metal sword\",\n    id: 2\n  }]\n}, {\n  table: \"animals\",\n  data: [{\n    name: \"flamingo\",\n    id: 1\n  }, {\n    name: \"tiger\",\n    id: 2\n  }]\n}];\nexport default function TableInfoPage() {\n  _s();\n\n  const [userTables, setUserTables] = useState(fakeUserData);\n\n  const doFetch = tablesToInclude => {\n    fetch(\"http://localhost:5000/req/generate\", {\n      method: \"post\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({\n        typeRequest: \"getUserDefinedTables\"\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      if (result.response.apiStatusCode !== \"OK\") {\n        setIsLoaded(\"error\");\n        return;\n      } else {\n        setRandResult(result.response);\n        setIsLoaded(\"loaded\");\n      }\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  const Tables = () => {\n    userTables.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.table\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n          data: item.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User-Defined Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tables, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableInfoPage, \"wRxFsdQA11OvM4oVPyPJKzmv6XA=\");\n\n_c = TableInfoPage;\nconst PageWrapper = styled.nav``;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableInfoPage\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/tableInfoPage/TableInfoPage.js"],"names":["React","useState","useEffect","styled","UserTable","fakeUserData","table","data","name","id","TableInfoPage","userTables","setUserTables","doFetch","tablesToInclude","fetch","method","headers","body","JSON","stringify","typeRequest","then","res","json","result","console","log","response","apiStatusCode","setIsLoaded","setRandResult","error","Tables","map","item","PageWrapper","nav"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAIC,YAAY,GAAG,CACjB;AACEC,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE,CACJ;AACEC,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GADI,EAKJ;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GALI;AAFR,CADiB,EAcjB;AACEH,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,IAAI,EAAE,CACJ;AACEC,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GADI,EAKJ;AACED,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GALI;AAFR,CAdiB,CAAnB;AA6BA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACI,YAAD,CAA5C;;AAEA,QAAMQ,OAAO,GAAIC,eAAD,IAAqB;AACnCC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE,CACP;AACA;AAFO,OAFiC;AAM1C;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,WAAW,EAAE;AADM,OAAf;AAPoC,KAAvC,CAAL,CAWGC,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAaKG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADU,CAEV;;AACA,UAAIA,MAAM,CAACG,QAAP,CAAgBC,aAAhB,KAAkC,IAAtC,EAA4C;AAC1CC,QAAAA,WAAW,CAAC,OAAD,CAAX;AACA;AACD,OAHD,MAGO;AACLC,QAAAA,aAAa,CAACN,MAAM,CAACG,QAAR,CAAb;AACAE,QAAAA,WAAW,CAAC,QAAD,CAAX;AACD;AACF,KAvBL,EAwBI;AACA;AACA;AACCE,IAAAA,KAAD,IAAW;AACTF,MAAAA,WAAW,CAAC,OAAD,CAAX,CADS,CAET;AACD,KA9BL;AAgCD,GAjCD;;AAmCA,QAAMG,MAAM,GAAG,MAAM;AACnBtB,IAAAA,UAAU,CAACuB,GAAX,CAAgBC,IAAD,IAAU;AACvB,0BACE;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAAC7B;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAE6B,IAAI,CAAC5B;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD;AAQD,GATD;;AAWA,sBACE,QAAC,WAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvDuBG,a;;KAAAA,a;AAyDxB,MAAM0B,WAAW,GAAGjC,MAAM,CAACkC,GAAI,EAA/B;MAAMD,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserTable from \"./UserTable\";\r\n\r\nlet fakeUserData = [\r\n  {\r\n    table: \"swords\",\r\n    data: [\r\n      {\r\n        name: \"wooden sword\",\r\n        id: 1,\r\n      },\r\n      {\r\n        name: \"metal sword\",\r\n        id: 2,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    table: \"animals\",\r\n    data: [\r\n      {\r\n        name: \"flamingo\",\r\n        id: 1,\r\n      },\r\n      {\r\n        name: \"tiger\",\r\n        id: 2,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function TableInfoPage() {\r\n  const [userTables, setUserTables] = useState(fakeUserData);\r\n\r\n  const doFetch = (tablesToInclude) => {\r\n    fetch(\"http://localhost:5000/req/generate\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        typeRequest: \"getUserDefinedTables\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          } else {\r\n            setRandResult(result.response);\r\n            setIsLoaded(\"loaded\");\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const Tables = () => {\r\n    userTables.map((item) => {\r\n      return (\r\n        <div>\r\n          <h3>{item.table}</h3>\r\n          <UserTable data={item.data} />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>User-Defined Tables</h1>\r\n      <Tables />\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav``;\r\n"]},"metadata":{},"sourceType":"module"}