{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\generatorPages\\\\GenerateBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenerateBox({\n  typeBox,\n  tables\n}) {\n  _s();\n\n  const [nextGenerated, setNextGenerated] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const [isLoaded, setIsLoaded] = useState(\"\");\n  const [randResult, setRandResult] = useState(\"\");\n  let fakeData = [{\n    item: \"AnItem\",\n    embelishments: \"fire\",\n    price: \"$30.50\"\n  }, {\n    item: \"AnotherItem\",\n    embelishments: \"none\",\n    price: \"$0.70\"\n  }, {\n    item: \"LastItem\",\n    embelishments: \"ice\",\n    price: \"$100000.90\"\n  }];\n\n  const handleClick = e => {\n    e.preventDefault();\n    setCounter(counter + 1);\n    setNextGenerated(counter); //Here is where you will make a call to the backend for information\n    //Pass it the tables to include, and other filters\n    //doFetch(typeBox, tables);\n  };\n\n  const doFetch = tablesToInclude => {\n    fetch(\"http://localhost:5000/req/generate\", {\n      method: \"post\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({\n        tables: tablesToInclude\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      if (result.response.apiStatusCode !== \"OK\") {\n        setIsLoaded(\"error\");\n        return;\n      } else {\n        setRandResult(result.response);\n        setIsLoaded(\"loaded\");\n      }\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"generate-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          readOnly: true,\n          value: nextGenerated,\n          className: \"textBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mainBtn\",\n          onClick: handleClick,\n          children: \"Generate!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GenerateBox, \"vjaT+bkiKD8f4IZnTtrfge0FCVk=\");\n\n_c = GenerateBox;\nconst PageWrapper = styled.nav`\n  display: flex;\n  flex-direction: column;\n\n  .generate-form {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 3px;\n  }\n  .textBox {\n    margin-bottom: 5px;\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GenerateBox\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/generatorPages/GenerateBox.js"],"names":["React","useState","useEffect","styled","GenerateBox","typeBox","tables","nextGenerated","setNextGenerated","counter","setCounter","isLoaded","setIsLoaded","randResult","setRandResult","fakeData","item","embelishments","price","handleClick","e","preventDefault","doFetch","tablesToInclude","fetch","method","headers","body","JSON","stringify","then","res","json","result","console","log","response","apiStatusCode","error","PageWrapper","nav"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function GenerateBox({ typeBox, tables }) {\r\n  const [nextGenerated, setNextGenerated] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n  const [randResult, setRandResult] = useState(\"\");\r\n  let fakeData = [\r\n    {\r\n      item: \"AnItem\",\r\n      embelishments: \"fire\",\r\n      price: \"$30.50\",\r\n    },\r\n    {\r\n      item: \"AnotherItem\",\r\n      embelishments: \"none\",\r\n      price: \"$0.70\",\r\n    },\r\n    {\r\n      item: \"LastItem\",\r\n      embelishments: \"ice\",\r\n      price: \"$100000.90\",\r\n    },\r\n  ];\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setCounter(counter + 1);\r\n    setNextGenerated(counter);\r\n\r\n    //Here is where you will make a call to the backend for information\r\n    //Pass it the tables to include, and other filters\r\n    //doFetch(typeBox, tables);\r\n  };\r\n\r\n  const doFetch = (tablesToInclude) => {\r\n    fetch(\"http://localhost:5000/req/generate\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        tables: tablesToInclude,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          } else {\r\n            setRandResult(result.response);\r\n            setIsLoaded(\"loaded\");\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <form className=\"generate-form\">\r\n          <input readOnly={true} value={nextGenerated} className=\"textBox\" />\r\n          <button className=\"mainBtn\" onClick={handleClick}>\r\n            Generate!\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .generate-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 3px;\r\n  }\r\n  .textBox {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}