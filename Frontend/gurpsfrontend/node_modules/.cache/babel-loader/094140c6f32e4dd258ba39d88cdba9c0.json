{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\editTablesPage\\\\CreateTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet starterData = {\n  tableName: \"\"\n};\nexport default function EditTablesPage({\n  userId\n}) {\n  _s();\n\n  const [isClicked, setIsClicked] = useState(false);\n  const [inputData, setInputData] = useState(starterData);\n  const [isLoaded, setIsLoaded] = useState(\"\");\n\n  const handleCreateClick = e => {\n    setIsClicked(true);\n  };\n\n  const handleInputChange = e => {\n    setInputData({ ...inputData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmitClick = e => {\n    setIsClicked(false); //doFetch();\n\n    setIsLoaded(\"success\");\n  };\n\n  const doFetch = () => {\n    //Do userInfo fetch here and set returned values to state\n    fetch(\"http://localhost:5000\", {\n      method: \"post\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({\n        typeRequest: \"sendNewTable\",\n        tableName: inputData.tableName,\n        userId: userId\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      if (result.response.apiStatusCode !== \"OK\") {\n        setIsLoaded(\"error\");\n        return;\n      }\n\n      setIsLoaded(\"success\");\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mainBtn\",\n      onClick: handleCreateClick,\n      children: \"Create New Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"separaterBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newAndErrorWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTableNameWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textInput\",\n          name: \"itemCategory\",\n          placeholder: \"Item Table Name\",\n          size: \"20\",\n          maxLength: \"40\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mainBtn\",\n          onClick: handleSubmitClick,\n          children: \"Submit New Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), isLoaded === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: \"Something went wrong.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), isLoaded === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"successMessage\",\n        children: \"Successfully created new table. Please refresh the page to view and add data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditTablesPage, \"lQWHrrojeq4GUiSZssbeLBY/0Hg=\");\n\n_c = EditTablesPage;\nconst PageWrapper = styled.nav`\n  .spacer {\n    margin-right: 10px;\n  }\n  .newTableNameWrap {\n    display: flex;\n    flex-direction: row;\n  }\n  .newAndErrorWrap {\n    display: flex;\n    flex-direction: column;\n  }\n  .separaterBottom {\n    margin-bottom: 10px;\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditTablesPage\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/editTablesPage/CreateTable.js"],"names":["React","useState","styled","starterData","tableName","EditTablesPage","userId","isClicked","setIsClicked","inputData","setInputData","isLoaded","setIsLoaded","handleCreateClick","e","handleInputChange","target","name","value","handleSubmitClick","doFetch","fetch","method","headers","body","JSON","stringify","typeRequest","then","res","json","result","console","log","response","apiStatusCode","error","PageWrapper","nav"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nlet starterData = {\r\n  tableName: \"\",\r\n};\r\n\r\nexport default function EditTablesPage({ userId }) {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [inputData, setInputData] = useState(starterData);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  const handleCreateClick = (e) => {\r\n    setIsClicked(true);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputData({\r\n      ...inputData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitClick = (e) => {\r\n    setIsClicked(false);\r\n    //doFetch();\r\n    setIsLoaded(\"success\");\r\n  };\r\n\r\n  const doFetch = () => {\r\n    //Do userInfo fetch here and set returned values to state\r\n    fetch(\"http://localhost:5000\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        typeRequest: \"sendNewTable\",\r\n        tableName: inputData.tableName,\r\n        userId: userId,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          }\r\n          setIsLoaded(\"success\");\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <button className=\"mainBtn\" onClick={handleCreateClick}>\r\n        Create New Table\r\n      </button>\r\n      <div className=\"separaterBottom\" />\r\n      {isClicked && (\r\n        <div className=\"newAndErrorWrap\">\r\n          <div className=\"newTableNameWrap\">\r\n            <input\r\n              className=\"textInput\"\r\n              name=\"itemCategory\"\r\n              placeholder=\"Item Table Name\"\r\n              size=\"20\"\r\n              maxLength=\"40\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <div className=\"spacer\" />\r\n            <button className=\"mainBtn\" onClick={handleSubmitClick}>\r\n              Submit New Table\r\n            </button>\r\n          </div>\r\n\r\n          {isLoaded === \"error\" && (\r\n            <div className=\"errorMessage\">Something went wrong.</div>\r\n          )}\r\n          {isLoaded === \"success\" && (\r\n            <div className=\"successMessage\">\r\n              Successfully created new table. Please refresh the page to view\r\n              and add data.\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .spacer {\r\n    margin-right: 10px;\r\n  }\r\n  .newTableNameWrap {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .newAndErrorWrap {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .separaterBottom {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}