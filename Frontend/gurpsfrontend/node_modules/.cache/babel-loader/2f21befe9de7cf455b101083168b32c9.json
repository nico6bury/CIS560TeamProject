{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\generatorPages\\\\SpicyGeneratorPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport GenerateBox from \"./GenerateBox\";\nimport Filters from \"./Filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fakeICD = [{\n  name: \"Fibers and Fabrics\",\n  itemCategoryId: 1,\n  checked: true\n}, {\n  name: \"Spices\",\n  itemCategoryId: 2,\n  checked: true\n}, {\n  name: \"Jewelry\",\n  itemCategoryId: 3,\n  checked: false\n}];\nlet declaredExtrasData = [{\n  name: \"Embelishments\",\n  id: 1,\n  checked: true\n}, {\n  name: \"Enchantments\",\n  id: 2,\n  checkd: true\n}];\nlet fakeUserDefinedTables = [{\n  name: \"Swords\",\n  id: 60,\n  checked: true\n}, {\n  name: \"animals\",\n  id: 61,\n  checked: false\n}];\nexport default function SpicyGeneratorPage() {\n  _s();\n\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\n  const [tablesToInclude, setTablesToInclude] = useState();\n  const [itemCategoryUDData, setItemCategoryUDData] = useState(fakeUserDefinedTables);\n  const [isLoaded, setIsLoaded] = useState(\"\");\n  useEffect(() => {//fetch the itemCategoryData\n    //doFetch();\n  });\n\n  const doFetch = () => {\n    fetch(\"http://localhost:5000\", {\n      method: \"post\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({\n        typeRequest: \"getOriginalItemCategoryData\"\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      if (result.response.apiStatusCode !== \"OK\") {\n        setIsLoaded(\"error\");\n        return;\n      }\n\n      setIsLoaded(\"loaded\");\n      setItemCategoryData(mapDataToCheckboxes(result.data));\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  const mapDataToCheckboxes = data => {\n    let finishedArray = [];\n    data.map(item => {\n      let curItem = {\n        name: item.name,\n        id: item.id,\n        checked: true\n      };\n      finishedArray.push(curItem);\n    });\n    return finishedArray;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GURPS Generator With User-Defined Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageContent\",\n      children: [/*#__PURE__*/_jsxDEV(GenerateBox, {\n        typeBox: \"Spicy\",\n        originalData: itemCategoryData,\n        spicyData: itemCategoryUDData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        itemCategoryData: itemCategoryData,\n        setItemCategoryData: setItemCategoryData,\n        extrasData: extrasData,\n        setExtrasData: setExtrasData,\n        isSpicy: true,\n        userTables: itemCategoryUDData,\n        setUserTables: setItemCategoryUDData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpicyGeneratorPage, \"nWXKmgk43MtLitkicG0KlY+oCbk=\");\n\n_c = SpicyGeneratorPage;\nconst PageWrapper = styled.nav`\n  display: flex;\n  flex-direction: column;\n\n  .pageContent {\n    display: flex;\n    flex-direction: row;\n  }\n  .spacer1 {\n    margin-right: 100px;\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SpicyGeneratorPage\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/generatorPages/SpicyGeneratorPage.js"],"names":["React","useState","useEffect","styled","GenerateBox","Filters","fakeICD","name","itemCategoryId","checked","declaredExtrasData","id","checkd","fakeUserDefinedTables","SpicyGeneratorPage","itemCategoryData","setItemCategoryData","extrasData","setExtrasData","tablesToInclude","setTablesToInclude","itemCategoryUDData","setItemCategoryUDData","isLoaded","setIsLoaded","doFetch","fetch","method","headers","body","JSON","stringify","typeRequest","then","res","json","result","console","log","response","apiStatusCode","mapDataToCheckboxes","data","error","finishedArray","map","item","curItem","push","PageWrapper","nav"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenerateBox from \"./GenerateBox\";\r\nimport Filters from \"./Filters\";\r\n\r\nlet fakeICD = [\r\n  {\r\n    name: \"Fibers and Fabrics\",\r\n    itemCategoryId: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Spices\",\r\n    itemCategoryId: 2,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Jewelry\",\r\n    itemCategoryId: 3,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nlet declaredExtrasData = [\r\n  {\r\n    name: \"Embelishments\",\r\n    id: 1,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"Enchantments\",\r\n    id: 2,\r\n    checkd: true,\r\n  },\r\n];\r\n\r\nlet fakeUserDefinedTables = [\r\n  {\r\n    name: \"Swords\",\r\n    id: 60,\r\n    checked: true,\r\n  },\r\n  {\r\n    name: \"animals\",\r\n    id: 61,\r\n    checked: false,\r\n  },\r\n];\r\n\r\nexport default function SpicyGeneratorPage() {\r\n  const [itemCategoryData, setItemCategoryData] = useState(fakeICD);\r\n  const [extrasData, setExtrasData] = useState(declaredExtrasData);\r\n  const [tablesToInclude, setTablesToInclude] = useState();\r\n  const [itemCategoryUDData, setItemCategoryUDData] = useState(\r\n    fakeUserDefinedTables\r\n  );\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //fetch the itemCategoryData\r\n    //doFetch();\r\n  });\r\n\r\n  const doFetch = () => {\r\n    fetch(\"http://localhost:5000\", {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        typeRequest: \"getOriginalItemCategoryData\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          }\r\n\r\n          setIsLoaded(\"loaded\");\r\n          setItemCategoryData(mapDataToCheckboxes(result.data));\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const mapDataToCheckboxes = (data) => {\r\n    let finishedArray = [];\r\n    data.map((item) => {\r\n      let curItem = {\r\n        name: item.name,\r\n        id: item.id,\r\n        checked: true,\r\n      };\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h1>GURPS Generator With User-Defined Tables</h1>\r\n      <div className=\"pageContent\">\r\n        <GenerateBox\r\n          typeBox=\"Spicy\"\r\n          originalData={itemCategoryData}\r\n          spicyData={itemCategoryUDData}\r\n        />\r\n        <div className=\"spacer1\" />\r\n        <Filters\r\n          itemCategoryData={itemCategoryData}\r\n          setItemCategoryData={setItemCategoryData}\r\n          extrasData={extrasData}\r\n          setExtrasData={setExtrasData}\r\n          isSpicy={true}\r\n          userTables={itemCategoryUDData}\r\n          setUserTables={setItemCategoryUDData}\r\n        ></Filters>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .pageContent {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .spacer1 {\r\n    margin-right: 100px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}