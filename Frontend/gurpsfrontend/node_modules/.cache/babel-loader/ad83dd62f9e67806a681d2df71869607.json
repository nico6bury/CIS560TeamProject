{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\editTablesPage\\\\AddItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport CreateTable from \"./CreateTable\";\nimport DisplayAndEditTables from \"./DisplayAndEditTables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddItems({\n  tables\n}) {\n  _s();\n\n  const [tableData, setTableData] = useState(\"\");\n  const [addIsClicked, setAddIsClicked] = useState(false);\n  useEffect(() => {\n    setTableData(AddCheckedProperty(tables));\n  });\n\n  const AddCheckedProperty = tables => {\n    let finishedArray = [];\n    tables.map(item => {\n      let curItem = {\n        name: item.name,\n        id: item.id,\n        checked: false\n      };\n      finishedArray.push(curItem);\n    });\n    return finishedArray;\n  };\n\n  const handleNewItemClick = e => {\n    e.preventDefault();\n    setAddIsClicked(true);\n  };\n\n  const TablesCheckboxes = () => {\n    const handleToggle = (e, index) => {\n      let item = tableData[index]; //item.endusetypecode = 99;\n      //console.log(item);\n      //item.active = e.target.value;\n\n      item.checked = !item.checked;\n      e.target.checked = item.checked;\n      e.target.value = item.checked;\n      let newState = tableData.slice(0, index).concat(item).concat(tableData.slice(index + 1));\n      setTableData(newState); //handleCheckChange(newState);\n      //console.log(checkedData);\n    }; // setState(s => ({ ...s, [target.name]:!s[target.name]}));\n\n\n    let checkboxes = tableData.map((item, idx) => {\n      let chkstr = \"\"; //console.log(\"ITEM: \" + item);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxes\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkboxes\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\" //onClick={(e) => handleToggle(e, idx)}\n            //onChange={handleChange}\n            ,\n            name: item.name,\n            value: item.name,\n            checked: item.checked,\n            onChange: e => handleToggle(e, idx),\n            className: \"checkboxes\" //readOnly={true}\n\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: checkboxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainBtn\",\n        onClick: handleNewItemClick,\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), addIsClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Please select the table to add an item to.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TablesCheckboxes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddItems, \"gsmPWd0BPcdGDVUALEkFqGbajO8=\");\n\n_c = AddItems;\nconst PageWrapper = styled.nav`\n  .separaterBottom {\n    margin-bottom: 20px;\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddItems\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/editTablesPage/AddItems.js"],"names":["React","useState","useEffect","styled","CreateTable","DisplayAndEditTables","AddItems","tables","tableData","setTableData","addIsClicked","setAddIsClicked","AddCheckedProperty","finishedArray","map","item","curItem","name","id","checked","push","handleNewItemClick","e","preventDefault","TablesCheckboxes","handleToggle","index","target","value","newState","slice","concat","checkboxes","idx","chkstr","PageWrapper","nav"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CreateTable from \"./CreateTable\";\r\nimport DisplayAndEditTables from \"./DisplayAndEditTables\";\r\n\r\nexport default function AddItems({ tables }) {\r\n  const [tableData, setTableData] = useState(\"\");\r\n  const [addIsClicked, setAddIsClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTableData(AddCheckedProperty(tables));\r\n  });\r\n\r\n  const AddCheckedProperty = (tables) => {\r\n    let finishedArray = [];\r\n    tables.map((item) => {\r\n      let curItem = {\r\n        name: item.name,\r\n        id: item.id,\r\n        checked: false,\r\n      };\r\n      finishedArray.push(curItem);\r\n    });\r\n    return finishedArray;\r\n  };\r\n\r\n  const handleNewItemClick = (e) => {\r\n    e.preventDefault();\r\n    setAddIsClicked(true);\r\n  };\r\n\r\n  const TablesCheckboxes = () => {\r\n    const handleToggle = (e, index) => {\r\n      let item = tableData[index];\r\n      //item.endusetypecode = 99;\r\n      //console.log(item);\r\n      //item.active = e.target.value;\r\n      item.checked = !item.checked;\r\n      e.target.checked = item.checked;\r\n      e.target.value = item.checked;\r\n\r\n      let newState = tableData\r\n        .slice(0, index)\r\n        .concat(item)\r\n        .concat(tableData.slice(index + 1));\r\n\r\n      setTableData(newState);\r\n      //handleCheckChange(newState);\r\n\r\n      //console.log(checkedData);\r\n    };\r\n    // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n    let checkboxes = tableData.map((item, idx) => {\r\n      let chkstr = \"\";\r\n      //console.log(\"ITEM: \" + item);\r\n      return (\r\n        <div className=\"checkboxes\">\r\n          <label className=\"checkboxes\">\r\n            <input\r\n              type=\"radio\"\r\n              //onClick={(e) => handleToggle(e, idx)}\r\n              //onChange={handleChange}\r\n              key={item.id}\r\n              name={item.name}\r\n              value={item.name}\r\n              checked={item.checked}\r\n              onChange={(e) => handleToggle(e, idx)}\r\n              className=\"checkboxes\"\r\n              //readOnly={true}\r\n            />\r\n            {item.name}\r\n          </label>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{checkboxes}</div>;\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <button className=\"mainBtn\" onClick={handleNewItemClick}>\r\n          Add New Item\r\n        </button>\r\n        {addIsClicked && (\r\n          <div>\r\n            <div>Please select the table to add an item to.</div>\r\n            <TablesCheckboxes />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .separaterBottom {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}