{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicos\\\\Desktop\\\\Programming Stuff\\\\CIS560-Databases\\\\Team Project\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\editTablesPage\\\\EditTablesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport AddItems from \"./AddItems\";\nimport CreateTable from \"./CreateTable\";\nimport DisplayAndEditTables from \"./DisplayAndEditTables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fakeUserData = [{\n  table: \"swords\",\n  creatingUser: \"User1\",\n  id: 1,\n  data: [{\n    name: \"wooden sword\",\n    id: 1,\n    basePrice: \"34.5\",\n    baseWeight: \"20\",\n    weightType: \"Pounds\",\n    quantityMin: \"1\",\n    quantityMax: \"5\",\n    description: \"A sword made of wood. Not sharp.\",\n    relativeChance: \"0.3\"\n  }, {\n    name: \"metal sword\",\n    id: 2,\n    basePrice: \"100.4\"\n  }]\n}, {\n  table: \"animals\",\n  creatingUser: \"User2\",\n  id: 2,\n  data: [{\n    name: \"flamingo\",\n    id: 1,\n    basePrice: \"5.00\"\n  }, {\n    name: \"tiger\",\n    id: 2,\n    basePrice: \"6.89\"\n  }]\n}];\nexport default function EditTablesPage({\n  userId\n}) {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  const [isLoadedSuccessOrErrorMessage, setIsLoadedSuccessOrErrorMessage] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    doFetch();\n  }, []);\n\n  const doFetch = () => {\n    //console.log(inputData.tableName + userId);\n    let send = JSON.stringify({\n      UserId: userId\n    }); //Do userInfo fetch here and set returned values to state\n\n    fetch(`http://localhost:5000/api/RetrieveAllItemsInTables/${send}`, {\n      method: \"get\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      } //credentials: \"include\",\n\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setTableData(result);\n      setIsLoaded(true);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoadedSuccessOrErrorMessage(\"errorCreatingTable\"); //console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit/Add Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayAndEditTables, {\n      tableData: tableData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"separaterBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTable, {\n      userId: userId,\n      isLoadedSuccessOrErrorMessage: isLoadedSuccessOrErrorMessage,\n      setIsLoadedSuccessOrErrorMessage: setIsLoadedSuccessOrErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(AddItems, {\n      tables: tableData,\n      isLoadedSuccessOrErrorMessage: isLoadedSuccessOrErrorMessage,\n      setIsLoadedSuccessOrErrorMessage: setIsLoadedSuccessOrErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditTablesPage, \"jS/M2wvMN5GC5PBmg+2PvwY1omk=\");\n\n_c = EditTablesPage;\nconst PageWrapper = styled.nav`\n  .separaterBottom {\n    margin-bottom: 20px;\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditTablesPage\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/nicos/Desktop/Programming Stuff/CIS560-Databases/Team Project/Frontend/gurpsfrontend/src/components/editTablesPage/EditTablesPage.js"],"names":["React","useState","useEffect","styled","AddItems","CreateTable","DisplayAndEditTables","fakeUserData","table","creatingUser","id","data","name","basePrice","baseWeight","weightType","quantityMin","quantityMax","description","relativeChance","EditTablesPage","userId","tableData","setTableData","isLoadedSuccessOrErrorMessage","setIsLoadedSuccessOrErrorMessage","isLoaded","setIsLoaded","doFetch","send","JSON","stringify","UserId","fetch","method","headers","then","res","json","result","console","log","error","PageWrapper","nav"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddItems from \"./AddItems\";\r\nimport CreateTable from \"./CreateTable\";\r\nimport DisplayAndEditTables from \"./DisplayAndEditTables\";\r\n\r\nlet fakeUserData = [\r\n  {\r\n    table: \"swords\",\r\n    creatingUser: \"User1\",\r\n    id: 1,\r\n    data: [\r\n      {\r\n        name: \"wooden sword\",\r\n        id: 1,\r\n        basePrice: \"34.5\",\r\n        baseWeight: \"20\",\r\n        weightType: \"Pounds\",\r\n        quantityMin: \"1\",\r\n        quantityMax: \"5\",\r\n        description: \"A sword made of wood. Not sharp.\",\r\n        relativeChance: \"0.3\",\r\n      },\r\n      {\r\n        name: \"metal sword\",\r\n        id: 2,\r\n        basePrice: \"100.4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    table: \"animals\",\r\n    creatingUser: \"User2\",\r\n    id: 2,\r\n    data: [\r\n      {\r\n        name: \"flamingo\",\r\n        id: 1,\r\n        basePrice: \"5.00\",\r\n      },\r\n      {\r\n        name: \"tiger\",\r\n        id: 2,\r\n        basePrice: \"6.89\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function EditTablesPage({ userId }) {\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isLoadedSuccessOrErrorMessage, setIsLoadedSuccessOrErrorMessage] =\r\n    useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, []);\r\n\r\n  const doFetch = () => {\r\n    //console.log(inputData.tableName + userId);\r\n    let send = JSON.stringify({\r\n      UserId: userId,\r\n    });\r\n    //Do userInfo fetch here and set returned values to state\r\n    fetch(`http://localhost:5000/api/RetrieveAllItemsInTables/${send}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setTableData(result);\r\n          setIsLoaded(true);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoadedSuccessOrErrorMessage(\"errorCreatingTable\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <h3>Edit/Add Tables</h3>\r\n      <DisplayAndEditTables tableData={tableData} />\r\n      <div className=\"separaterBottom\" />\r\n      <CreateTable\r\n        userId={userId}\r\n        isLoadedSuccessOrErrorMessage={isLoadedSuccessOrErrorMessage}\r\n        setIsLoadedSuccessOrErrorMessage={setIsLoadedSuccessOrErrorMessage}\r\n      />\r\n      {isLoaded && (\r\n        <AddItems\r\n          tables={tableData}\r\n          isLoadedSuccessOrErrorMessage={isLoadedSuccessOrErrorMessage}\r\n          setIsLoadedSuccessOrErrorMessage={setIsLoadedSuccessOrErrorMessage}\r\n        />\r\n      )}\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  .separaterBottom {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}