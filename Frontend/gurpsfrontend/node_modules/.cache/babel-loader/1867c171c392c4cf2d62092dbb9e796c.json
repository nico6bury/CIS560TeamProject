{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\generatorPages\\\\Filters.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filter() {\n  const ItemCategoryCheckboxes = () => {\n    //const [checkedData, setCheckedData] = useState(areaDescriptionData);\n    const handleToggle = (e, index) => {\n      let item = areaDescriptionCheckedData[index]; //item.endusetypecode = 99;\n      //console.log(item);\n      //item.active = e.target.value;\n\n      item.checked = !item.checked;\n      e.target.checked = item.checked;\n      e.target.value = item.checked;\n      let newState = areaDescriptionCheckedData.slice(0, index).concat(item).concat(areaDescriptionCheckedData.slice(index + 1));\n      setAreaDescriptionCheckedData(newState); //handleCheckChange(newState);\n      //console.log(checkedData);\n    }; // setState(s => ({ ...s, [target.name]:!s[target.name]}));\n\n\n    let checkboxes = areaDescriptionCheckedData.map((item, idx) => {\n      let chkstr = \"\"; //console.log(\"ITEM: \" + item);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxes\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkboxes\",\n          children: [item.name, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\" //onClick={(e) => handleToggle(e, idx)}\n            //onChange={handleChange}\n            ,\n            name: item.name,\n            value: item.name,\n            checked: item.checked,\n            onChange: e => handleToggle(e, idx),\n            className: \"checkboxes\",\n            readOnly: true\n          }, item.itemCategoryId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: checkboxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c = Filter;\nconst PageWrapper = styled.nav``;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/generatorPages/Filters.js"],"names":["React","styled","Filter","ItemCategoryCheckboxes","handleToggle","e","index","item","areaDescriptionCheckedData","checked","target","value","newState","slice","concat","setAreaDescriptionCheckedData","checkboxes","map","idx","chkstr","name","itemCategoryId","PageWrapper","nav"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,sBAAsB,GAAG,MAAM;AACnC;AAEA,UAAMC,YAAY,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACjC,UAAIC,IAAI,GAAGC,0BAA0B,CAACF,KAAD,CAArC,CADiC,CAEjC;AACA;AACA;;AACAC,MAAAA,IAAI,CAACE,OAAL,GAAe,CAACF,IAAI,CAACE,OAArB;AACAJ,MAAAA,CAAC,CAACK,MAAF,CAASD,OAAT,GAAmBF,IAAI,CAACE,OAAxB;AACAJ,MAAAA,CAAC,CAACK,MAAF,CAASC,KAAT,GAAiBJ,IAAI,CAACE,OAAtB;AAEA,UAAIG,QAAQ,GAAGJ,0BAA0B,CACtCK,KADY,CACN,CADM,EACHP,KADG,EAEZQ,MAFY,CAELP,IAFK,EAGZO,MAHY,CAGLN,0BAA0B,CAACK,KAA3B,CAAiCP,KAAK,GAAG,CAAzC,CAHK,CAAf;AAKAS,MAAAA,6BAA6B,CAACH,QAAD,CAA7B,CAdiC,CAejC;AAEA;AACD,KAlBD,CAHmC,CAsBnC;;;AAEA,QAAII,UAAU,GAAGR,0BAA0B,CAACS,GAA3B,CAA+B,CAACV,IAAD,EAAOW,GAAP,KAAe;AAC7D,UAAIC,MAAM,GAAG,EAAb,CAD6D,CAE7D;;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA,qBACGZ,IAAI,CAACa,IADR,eAEE;AACE,YAAA,IAAI,EAAC,UADP,CAEE;AACA;AAHF;AAKE,YAAA,IAAI,EAAEb,IAAI,CAACa,IALb;AAME,YAAA,KAAK,EAAEb,IAAI,CAACa,IANd;AAOE,YAAA,OAAO,EAAEb,IAAI,CAACE,OAPhB;AAQE,YAAA,QAAQ,EAAGJ,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIa,GAAJ,CAR/B;AASE,YAAA,SAAS,EAAC,YATZ;AAUE,YAAA,QAAQ,EAAE;AAVZ,aAIOX,IAAI,CAACc,cAJZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAmBD,KAtBgB,CAAjB;AAuBA,wBAAO;AAAA,gBAAML;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAhDD;;AAkDA,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KApDuBd,M;AAsDxB,MAAMoB,WAAW,GAAGrB,MAAM,CAACsB,GAAI,EAA/B;MAAMD,W","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Filter() {\r\n  const ItemCategoryCheckboxes = () => {\r\n    //const [checkedData, setCheckedData] = useState(areaDescriptionData);\r\n\r\n    const handleToggle = (e, index) => {\r\n      let item = areaDescriptionCheckedData[index];\r\n      //item.endusetypecode = 99;\r\n      //console.log(item);\r\n      //item.active = e.target.value;\r\n      item.checked = !item.checked;\r\n      e.target.checked = item.checked;\r\n      e.target.value = item.checked;\r\n\r\n      let newState = areaDescriptionCheckedData\r\n        .slice(0, index)\r\n        .concat(item)\r\n        .concat(areaDescriptionCheckedData.slice(index + 1));\r\n\r\n      setAreaDescriptionCheckedData(newState);\r\n      //handleCheckChange(newState);\r\n\r\n      //console.log(checkedData);\r\n    };\r\n    // setState(s => ({ ...s, [target.name]:!s[target.name]}));\r\n\r\n    let checkboxes = areaDescriptionCheckedData.map((item, idx) => {\r\n      let chkstr = \"\";\r\n      //console.log(\"ITEM: \" + item);\r\n      return (\r\n        <div className=\"checkboxes\">\r\n          <label className=\"checkboxes\">\r\n            {item.name}\r\n            <input\r\n              type=\"checkbox\"\r\n              //onClick={(e) => handleToggle(e, idx)}\r\n              //onChange={handleChange}\r\n              key={item.itemCategoryId}\r\n              name={item.name}\r\n              value={item.name}\r\n              checked={item.checked}\r\n              onChange={(e) => handleToggle(e, idx)}\r\n              className=\"checkboxes\"\r\n              readOnly={true}\r\n            />\r\n          </label>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{checkboxes}</div>;\r\n  };\r\n\r\n  return <PageWrapper></PageWrapper>;\r\n}\r\n\r\nconst PageWrapper = styled.nav``;\r\n"]},"metadata":{},"sourceType":"module"}