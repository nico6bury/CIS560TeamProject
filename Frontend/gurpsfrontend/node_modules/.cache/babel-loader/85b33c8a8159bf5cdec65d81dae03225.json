{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Route, Switch } from \"react-router\";\nimport OriginalGeneratorPage from \"./components/generatorPages/OriginalGeneratorPage\";\nimport SpicyGeneratorPage from \"./components/generatorPages/SpicyGeneratorPage\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport TableInfoPage from \"./components/tableInfoPage/TableInfoPage\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport \"./App.css\";\nimport LoginPage from \"./components/loginSignUpPages/LoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [userName, setUserName] = useState(\"\");\n  const [userId, setUserId] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(null);\n  useEffect(() => {\n    //fetchUserData();\n    //The following is to simulate a call to fetchUserData()\n    setIsLoggedIn(true);\n    setIsLoaded(\"loaded\");\n    setUserName(\"sldiener\");\n  }, [isLoggedIn]);\n\n  const fetchUserData = () => {\n    //Do userInfo fetch here and set returned values to state\n    fetch(\"http://localhost:5000/req/userInfo\", {\n      method: \"post\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({})\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      if (result.response.apiStatusCode !== \"OK\") {\n        setIsLoaded(\"error\");\n        setIsLoggedIn(false);\n        return;\n      } //If the user is not logged in\n\n\n      if (result.response.data.loggedIn === 0) {\n        setIsLoggedIn(false); //setIsLoaded(\"incorrect\");\n\n        return;\n      } //The user is logged in\n\n\n      if (result.response.data.loggedIn === 1) {\n        setIsLoggedIn(true);\n        setUserId(result.response.data.dealerid);\n        setUserName(result.response.data.dealerName);\n        setIsLoaded(\"loaded\");\n      }\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  if (!isLoggedIn) {\n    //Adds the login page class to root so the login page is centered\n    var element = document.getElementById(\"root\");\n    element.className = element.className.replace(/\\bregularPage\\b/g, \"loginPage\");\n    return /*#__PURE__*/_jsxDEV(LoginPageWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(LoginPage, {\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), isLoaded === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMessage\",\n          children: \"An unkown error occured.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userName: userName,\n        isLoggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: OriginalGeneratorPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/spicygenerator\",\n              component: SpicyGeneratorPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/tableinfo\",\n              component: TableInfoPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OXzE0STKjnneqYFxYJir3BRhcsI=\");\n\n_c = App;\nconst PageWrapper = styled.nav`\n  display: flex;\n\n  .contentWrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: left;\n  }\n`;\n_c2 = PageWrapper;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/App.js"],"names":["useState","useEffect","styled","Route","Switch","OriginalGeneratorPage","SpicyGeneratorPage","Header","Sidebar","TableInfoPage","Fragment","LoginPage","App","isLoggedIn","setIsLoggedIn","userName","setUserName","userId","setUserId","isLoaded","setIsLoaded","fetchUserData","fetch","method","headers","body","JSON","stringify","then","res","json","result","console","log","response","apiStatusCode","data","loggedIn","dealerid","dealerName","error","element","document","getElementById","className","replace","PageWrapper","nav"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Route, Switch } from \"react-router\";\nimport OriginalGeneratorPage from \"./components/generatorPages/OriginalGeneratorPage\";\nimport SpicyGeneratorPage from \"./components/generatorPages/SpicyGeneratorPage\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport TableInfoPage from \"./components/tableInfoPage/TableInfoPage\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport \"./App.css\";\nimport LoginPage from \"./components/loginSignUpPages/LoginPage\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [userName, setUserName] = useState(\"\");\n  const [userId, setUserId] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(null);\n\n  useEffect(() => {\n    //fetchUserData();\n\n    //The following is to simulate a call to fetchUserData()\n    setIsLoggedIn(true);\n    setIsLoaded(\"loaded\");\n    setUserName(\"sldiener\");\n  }, [isLoggedIn]);\n\n  const fetchUserData = () => {\n    //Do userInfo fetch here and set returned values to state\n    fetch(\"http://localhost:5000/req/userInfo\", {\n      method: \"post\",\n      headers: {\n        //\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({}),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          //If there was an error fetching the data\n          if (result.response.apiStatusCode !== \"OK\") {\n            setIsLoaded(\"error\");\n            setIsLoggedIn(false);\n            return;\n          }\n          //If the user is not logged in\n          if (result.response.data.loggedIn === 0) {\n            setIsLoggedIn(false);\n            //setIsLoaded(\"incorrect\");\n            return;\n          }\n          //The user is logged in\n          if (result.response.data.loggedIn === 1) {\n            setIsLoggedIn(true);\n            setUserId(result.response.data.dealerid);\n            setUserName(result.response.data.dealerName);\n            setIsLoaded(\"loaded\");\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(\"error\");\n          //console.log(error);\n        }\n      );\n  };\n\n  if (!isLoggedIn) {\n    //Adds the login page class to root so the login page is centered\n    var element = document.getElementById(\"root\");\n    element.className = element.className.replace(\n      /\\bregularPage\\b/g,\n      \"loginPage\"\n    );\n    return (\n      <LoginPageWrapper>\n        <div>\n          <LoginPage setIsLoggedIn={setIsLoggedIn} />\n          {isLoaded === \"error\" && (\n            <div className=\"errorMessage\">An unkown error occured.</div>\n          )}\n        </div>\n      </LoginPageWrapper>\n    );\n  }\n\n  return (\n    <PageWrapper>\n      <div>\n        <Header userName={userName} isLoggedIn={isLoggedIn} />\n        <div className=\"contentWrapper\">\n          <Sidebar isLoggedIn={isLoggedIn} />\n          <Switch>\n            <Route exact path=\"/\" component={OriginalGeneratorPage} />\n            {isLoggedIn && (\n              <Fragment>\n                <Route path=\"/spicygenerator\" component={SpicyGeneratorPage} />\n                <Route path=\"/tableinfo\" component={TableInfoPage} />\n              </Fragment>\n            )}\n          </Switch>\n        </div>\n      </div>\n    </PageWrapper>\n  );\n}\n\nconst PageWrapper = styled.nav`\n  display: flex;\n\n  .contentWrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: left;\n  }\n`;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}