{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah.diener\\\\Desktop\\\\School\\\\CIS560\\\\GroupProject\\\\CIS560TeamProject\\\\Frontend\\\\gurpsfrontend\\\\src\\\\components\\\\generatorPages\\\\GenerateBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nlet fakeData = [{\n  item: \"AnItem\",\n  embelishments: \"fire\",\n  price: \"$30.50\"\n}, {\n  item: \"AnotherItem\",\n  embelishments: \"none\",\n  price: \"$0.70\"\n}, {\n  item: \"LastItem\",\n  embelishments: \"ice\",\n  price: \"$100000.90\"\n}];\nexport default function GenerateBox({\n  typeBox,\n  originalData,\n  spicyData,\n  userId\n}) {\n  _s();\n\n  const [nextGenerated, setNextGenerated] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const [isLoaded, setIsLoaded] = useState(\"\");\n  const [randResult, setRandResult] = useState(\"\");\n  const [numberGenerate, setNumberGenerate] = useState(1);\n\n  const handleClick = e => {\n    e.preventDefault(); //setCounter(counter + 1);\n    //setNextGenerated(counter);\n    //Checking if the number to generate is a valid number to enter\n\n    if (numberGenerate.length < 1 || parseInt(numberGenerate) > 20) {\n      setIsLoaded(\"invalid\");\n      return;\n    } //Looping through the data to determine what tables to include\n\n\n    let tables = [];\n    originalData.map(item => {\n      if (item.checked === true) {\n        tables.push(item);\n      }\n    });\n    spicyData.map(item => {\n      if (item.checked === true) {\n        tables.push(item);\n      }\n    });\n    setIsLoaded(\"okay\");\n    doFetch(tables); //setRandResult(fakeData);\n  };\n\n  const doFetch = tablesToInclude => {\n    let send = JSON.stringify({\n      NumItems: numberGenerate,\n      UserId: userId\n    });\n    fetch(`http://localhost:5000/api/RandomItem/${send}`, {\n      method: \"post\",\n      headers: {//\"Content-Type\": \"application/json\",\n        //\"Access-Control-Allow-Credentials\": true,\n      },\n      //credentials: \"include\",\n      body: JSON.stringify({\n        tables: tablesToInclude,\n        numberGenerate: numberGenerate,\n        typeRequest: \"getRandomLoot\"\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //If there was an error fetching the data\n\n      if (result.response.apiStatusCode !== \"OK\") {\n        setIsLoaded(\"error\");\n        return;\n      } else {\n        setRandResult(result.response);\n        setIsLoaded(\"loaded\");\n      }\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(\"error\"); //console.log(error);\n    });\n  };\n\n  const columns = React.useMemo(() => [{\n    Header: \"Item\",\n    accessor: \"item\"\n  }, {\n    Header: \"Embelishments\",\n    accessor: \"embelishments\"\n  }, {\n    Header: \"Price\",\n    accessor: \"price\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: fakeData\n  }, useSortBy);\n\n  const handleRowClick = e => {//do something\n  };\n\n  const handleNumberChange = e => {\n    if (Number(e.target.value) || e.target.value === \"\") {\n      setNumberGenerate(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"generate-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n              children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n                children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? \"▼\" : \"▲\" : \" ▲▼\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n            children: rows.map((row, i) => {\n              prepareRow(row);\n              return /*#__PURE__*/_createElement(\"tr\", { ...row.getRowProps(),\n                key: i,\n                onClick: () => handleRowClick(row),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }\n              }, row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 25\n                }, this);\n              }));\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generateWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            readOnly: false,\n            value: numberGenerate,\n            className: \"textBox\",\n            onChange: handleNumberChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mainBtn\",\n            onClick: handleClick,\n            children: \"Generate!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), isLoaded === \"invalid\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMessage wrapText\",\n          children: \"Invalid Number to Generate. Please enter a number between 1-20.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GenerateBox, \"WBTAC8Yf08n8REmASEnRPD9/KZY=\", false, function () {\n  return [useTable];\n});\n\n_c = GenerateBox;\nconst PageWrapper = styled.nav`\n  display: flex;\n  flex-direction: column;\n  .wrapText {\n    max-width: 350px;\n    word-wrap: break-word;\n  }\n\n  .generateWrapper {\n    display: flex;\n    flex-direction: row;\n    margin-top: 15px;\n  }\n  .generate-form {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 3px;\n  }\n  .textBox {\n    margin-bottom: 5px;\n  }\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    tr:hover {\n      th {\n        background: var(--mainWhite);\n      }\n      background: var(--lightGrey);\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.15rem 0.15rem 0.15rem 0.35rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n_c2 = PageWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GenerateBox\");\n$RefreshReg$(_c2, \"PageWrapper\");","map":{"version":3,"sources":["C:/Users/sarah.diener/Desktop/School/CIS560/GroupProject/CIS560TeamProject/Frontend/gurpsfrontend/src/components/generatorPages/GenerateBox.js"],"names":["React","useState","useEffect","styled","useTable","useSortBy","fakeData","item","embelishments","price","GenerateBox","typeBox","originalData","spicyData","userId","nextGenerated","setNextGenerated","counter","setCounter","isLoaded","setIsLoaded","randResult","setRandResult","numberGenerate","setNumberGenerate","handleClick","e","preventDefault","length","parseInt","tables","map","checked","push","doFetch","tablesToInclude","send","JSON","stringify","NumItems","UserId","fetch","method","headers","body","typeRequest","then","res","json","result","console","log","response","apiStatusCode","error","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","data","handleRowClick","handleNumberChange","Number","target","value","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","PageWrapper","nav"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;;;AAEA,IAAIC,QAAQ,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,aAAa,EAAE,MAFjB;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADa,EAMb;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,aAAa,EAAE,MAFjB;AAGEC,EAAAA,KAAK,EAAE;AAHT,CANa,EAWb;AACEF,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,aAAa,EAAE,KAFjB;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAXa,CAAf;AAiBA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,OADkC;AAElCC,EAAAA,YAFkC;AAGlCC,EAAAA,SAHkC;AAIlCC,EAAAA;AAJkC,CAArB,EAKZ;AAAA;;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,CAAD,CAApD;;AAEA,QAAMwB,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;AACA;AAEA;;AACA,QAAIJ,cAAc,CAACK,MAAf,GAAwB,CAAxB,IAA6BC,QAAQ,CAACN,cAAD,CAAR,GAA2B,EAA5D,EAAgE;AAC9DH,MAAAA,WAAW,CAAC,SAAD,CAAX;AACA;AACD,KATwB,CAWzB;;;AACA,QAAIU,MAAM,GAAG,EAAb;AACAlB,IAAAA,YAAY,CAACmB,GAAb,CAAkBxB,IAAD,IAAU;AACzB,UAAIA,IAAI,CAACyB,OAAL,KAAiB,IAArB,EAA2B;AACzBF,QAAAA,MAAM,CAACG,IAAP,CAAY1B,IAAZ;AACD;AACF,KAJD;AAKAM,IAAAA,SAAS,CAACkB,GAAV,CAAexB,IAAD,IAAU;AACtB,UAAIA,IAAI,CAACyB,OAAL,KAAiB,IAArB,EAA2B;AACzBF,QAAAA,MAAM,CAACG,IAAP,CAAY1B,IAAZ;AACD;AACF,KAJD;AAMAa,IAAAA,WAAW,CAAC,MAAD,CAAX;AACAc,IAAAA,OAAO,CAACJ,MAAD,CAAP,CAzByB,CA0BzB;AACD,GA3BD;;AA6BA,QAAMI,OAAO,GAAIC,eAAD,IAAqB;AACnC,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,MAAAA,QAAQ,EAAEhB,cADc;AAExBiB,MAAAA,MAAM,EAAE1B;AAFgB,KAAf,CAAX;AAIA2B,IAAAA,KAAK,CAAE,wCAAuCL,IAAK,EAA9C,EAAiD;AACpDM,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,OAAO,EAAE,CACP;AACA;AAFO,OAF2C;AAMpD;AACAC,MAAAA,IAAI,EAAEP,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA,MAAM,EAAEK,eADW;AAEnBZ,QAAAA,cAAc,EAAEA,cAFG;AAGnBsB,QAAAA,WAAW,EAAE;AAHM,OAAf;AAP8C,KAAjD,CAAL,CAaGC,IAbH,CAaSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAbjB,EAcGF,IAdH,CAeKG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADU,CAEV;;AACA,UAAIA,MAAM,CAACG,QAAP,CAAgBC,aAAhB,KAAkC,IAAtC,EAA4C;AAC1CjC,QAAAA,WAAW,CAAC,OAAD,CAAX;AACA;AACD,OAHD,MAGO;AACLE,QAAAA,aAAa,CAAC2B,MAAM,CAACG,QAAR,CAAb;AACAhC,QAAAA,WAAW,CAAC,QAAD,CAAX;AACD;AACF,KAzBL,EA0BI;AACA;AACA;AACCkC,IAAAA,KAAD,IAAW;AACTlC,MAAAA,WAAW,CAAC,OAAD,CAAX,CADS,CAET;AACD,KAhCL;AAkCD,GAvCD;;AAyCA,QAAMmC,OAAO,GAAGvD,KAAK,CAACwD,OAAN,CACd,MAAM,CACJ;AACEC,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,eADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,EASJ;AACED,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GATI,CADQ,EAed,EAfc,CAAhB;AAkBA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJ3D,QAAQ,CACN;AACEmD,IAAAA,OADF;AAEES,IAAAA,IAAI,EAAE1D;AAFR,GADM,EAKND,SALM,CADV;;AASA,QAAM4D,cAAc,GAAIvC,CAAD,IAAO,CAC5B;AACD,GAFD;;AAIA,QAAMwC,kBAAkB,GAAIxC,CAAD,IAAO;AAChC,QAAIyC,MAAM,CAACzC,CAAC,CAAC0C,MAAF,CAASC,KAAV,CAAN,IAA0B3C,CAAC,CAAC0C,MAAF,CAASC,KAAT,KAAmB,EAAjD,EAAqD;AACnD7C,MAAAA,iBAAiB,CAACE,CAAC,CAAC0C,MAAF,CAASC,KAAV,CAAjB;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,WAAD;AAAA,2BACE;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACE,sBAAWV,aAAa,EAAxB;AAAA,kCACE;AAAA,sBACGE,YAAY,CAAC9B,GAAb,CAAkBuC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,wBACGD,WAAW,CAAC3B,OAAZ,CAAoBZ,GAApB,CAAyByC,MAAD,iBACvB,mBACMA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CADN;AAAA,2BAGGF,MAAM,CAACG,MAAP,CAAc,QAAd,CAHH,eAIE;AAAA,4BACGH,MAAM,CAACI,QAAP,GACGJ,MAAM,CAACK,YAAP,GACE,GADF,GAEE,GAHL,GAIG;AALN;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAqBE,sBAAWjB,iBAAiB,EAA5B;AAAA,sBACGE,IAAI,CAAC/B,GAAL,CAAS,CAAC+C,GAAD,EAAMC,CAAN,KAAY;AACpBhB,cAAAA,UAAU,CAACe,GAAD,CAAV;AACA,kCACE,0BACMA,GAAG,CAACE,WAAJ,EADN;AAEE,gBAAA,GAAG,EAAED,CAFP;AAGE,gBAAA,OAAO,EAAE,MAAMd,cAAc,CAACa,GAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKGA,GAAG,CAACG,KAAJ,CAAUlD,GAAV,CAAemD,IAAD,IAAU;AACvB,oCACE,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BAA8BD,IAAI,CAACP,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD,eAJA,CALH,CADF;AAaD,aAfA;AADH;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAyCE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AACE,YAAA,QAAQ,EAAE,KADZ;AAEE,YAAA,KAAK,EAAEpD,cAFT;AAGE,YAAA,SAAS,EAAC,SAHZ;AAIE,YAAA,QAAQ,EAAE2C;AAJZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAEzC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCF,EAoDGN,QAAQ,KAAK,SAAb,iBACC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgED;;GAvLuBT,W;UAqGpBN,Q;;;KArGoBM,W;AAyLxB,MAAM0E,WAAW,GAAGjF,MAAM,CAACkF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnDA;MAAMD,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\n\r\nlet fakeData = [\r\n  {\r\n    item: \"AnItem\",\r\n    embelishments: \"fire\",\r\n    price: \"$30.50\",\r\n  },\r\n  {\r\n    item: \"AnotherItem\",\r\n    embelishments: \"none\",\r\n    price: \"$0.70\",\r\n  },\r\n  {\r\n    item: \"LastItem\",\r\n    embelishments: \"ice\",\r\n    price: \"$100000.90\",\r\n  },\r\n];\r\nexport default function GenerateBox({\r\n  typeBox,\r\n  originalData,\r\n  spicyData,\r\n  userId,\r\n}) {\r\n  const [nextGenerated, setNextGenerated] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n  const [isLoaded, setIsLoaded] = useState(\"\");\r\n  const [randResult, setRandResult] = useState(\"\");\r\n  const [numberGenerate, setNumberGenerate] = useState(1);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    //setCounter(counter + 1);\r\n    //setNextGenerated(counter);\r\n\r\n    //Checking if the number to generate is a valid number to enter\r\n    if (numberGenerate.length < 1 || parseInt(numberGenerate) > 20) {\r\n      setIsLoaded(\"invalid\");\r\n      return;\r\n    }\r\n\r\n    //Looping through the data to determine what tables to include\r\n    let tables = [];\r\n    originalData.map((item) => {\r\n      if (item.checked === true) {\r\n        tables.push(item);\r\n      }\r\n    });\r\n    spicyData.map((item) => {\r\n      if (item.checked === true) {\r\n        tables.push(item);\r\n      }\r\n    });\r\n\r\n    setIsLoaded(\"okay\");\r\n    doFetch(tables);\r\n    //setRandResult(fakeData);\r\n  };\r\n\r\n  const doFetch = (tablesToInclude) => {\r\n    let send = JSON.stringify({\r\n      NumItems: numberGenerate,\r\n      UserId: userId,\r\n    });\r\n    fetch(`http://localhost:5000/api/RandomItem/${send}`, {\r\n      method: \"post\",\r\n      headers: {\r\n        //\"Content-Type\": \"application/json\",\r\n        //\"Access-Control-Allow-Credentials\": true,\r\n      },\r\n      //credentials: \"include\",\r\n      body: JSON.stringify({\r\n        tables: tablesToInclude,\r\n        numberGenerate: numberGenerate,\r\n        typeRequest: \"getRandomLoot\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          //If there was an error fetching the data\r\n          if (result.response.apiStatusCode !== \"OK\") {\r\n            setIsLoaded(\"error\");\r\n            return;\r\n          } else {\r\n            setRandResult(result.response);\r\n            setIsLoaded(\"loaded\");\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(\"error\");\r\n          //console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Item\",\r\n        accessor: \"item\",\r\n      },\r\n      {\r\n        Header: \"Embelishments\",\r\n        accessor: \"embelishments\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"price\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable(\r\n      {\r\n        columns,\r\n        data: fakeData,\r\n      },\r\n      useSortBy\r\n    );\r\n\r\n  const handleRowClick = (e) => {\r\n    //do something\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    if (Number(e.target.value) || e.target.value === \"\") {\r\n      setNumberGenerate(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div>\r\n        <form className=\"generate-form\">\r\n          <table {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th\r\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                      {column.render(\"Header\")}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? \"▼\"\r\n                            : \"▲\"\r\n                          : \" ▲▼\"}\r\n                      </span>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr\r\n                    {...row.getRowProps()}\r\n                    key={i}\r\n                    onClick={() => handleRowClick(row)}\r\n                  >\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"generateWrapper\">\r\n            <input\r\n              readOnly={false}\r\n              value={numberGenerate}\r\n              className=\"textBox\"\r\n              onChange={handleNumberChange}\r\n            />\r\n            <button className=\"mainBtn\" onClick={handleClick}>\r\n              Generate!\r\n            </button>\r\n          </div>\r\n          {isLoaded === \"invalid\" && (\r\n            <div className=\"errorMessage wrapText\">\r\n              Invalid Number to Generate. Please enter a number between 1-20.\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nconst PageWrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  .wrapText {\r\n    max-width: 350px;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  .generateWrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 15px;\r\n  }\r\n  .generate-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 3px;\r\n  }\r\n  .textBox {\r\n    margin-bottom: 5px;\r\n  }\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    tr:hover {\r\n      th {\r\n        background: var(--mainWhite);\r\n      }\r\n      background: var(--lightGrey);\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.15rem 0.15rem 0.15rem 0.35rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}